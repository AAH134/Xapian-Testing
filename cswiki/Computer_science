
Computer science or computing science (abbreviated CS or CompSci) is the scientific and mathematical approach to computation, and specifically to the design of computing machines and processes. A computer scientist is a scientist who specialises in the theory of computation and the design of computers.[tpl]cite web |url=http://wordnetweb.princeton.edu/perl/webwn?s=computer%20scientist |title=WordNet Search - 3.1 |publisher=Wordnetweb.princeton.edu |date= |accessdate=2012-05-14[/tpl]
Its subfields can be divided into practical techniques for its implementation and application in computer systems and purely theoretical areas. Some, such as computational complexity theory, which studies fundamental properties of computational problems, are highly abstract, while others, such as computer graphics, emphasize real-world applications. Still others focus on the challenges in implementing computations. For example, programming language theory studies approaches to description of computations, while the study of computer programming itself investigates various aspects of the use of programming languages and complex systems, and human-computer interaction focuses on the challenges in making computers and computations useful, usable, and universally accessible to humans.
   Computer science deals with the theoretical foundations of information and computation, together with practical techniques for the implementation and application of these foundations 
==History==

The earliest foundations of what would become computer science predate the invention of the modern digital computer. Machines for calculating fixed numerical tasks such as the abacus have existed since antiquity. Wilhelm Schickard designed the first mechanical calculator in 1623, but did not complete its construction.[tpl]cite web |author=Nigel Tout |title=Calculator Timeline|url=http://www.vintagecalculators.com/html/calculator_time-line.html |work=Vintage Calculator Web Museum |year=2006 |accessdate=2006-09-18[/tpl] Blaise Pascal designed and constructed the first working mechanical calculator, the Pascaline, in 1642. In 1694 Gottfried Wilhelm Leibnitz completed the Step Reckoner, the first calculator that could perform all four arithmetic operations.  Charles Babbage designed a difference engine and then a general-purpose Analytical Engine in Victorian times,[tpl]cite web |url=http://www.sciencemuseum.org.uk/on-line/babbage/index.asp |title=Science Museum - Introduction to Babbage |accessdate=2006-09-24 |archiveurl=http://web.archive.org/web/20060908054017/http://www.sciencemuseum.org.uk/on-line/babbage/index.asp |archivedate=2006-09-08[/tpl] for which Ada Lovelace wrote a manual. Because of this work she is regarded today as the world's first programmer.[tpl]cite web |url=http://www.scottlan.edu/Lriddle/women/ada-love.htm |title=A Selection and Adaptation From Ada's Notes found in "Ada, The Enchantress of Numbers," by Betty Alexandra Toole Ed.D. Strawberry Press, Mill Valley, CA |accessdate=2006-05-04[/tpl] Around 1900, punched card machines were introduced.
During the 1940s, as new and more powerful computing machines were developed, the term computer came to refer to the machines rather than their human predecessors.The Association for Computing Machinery (ACM) was founded in 1947. As it became clear that computers could be used for more than just mathematical calculations, the field of computer science broadened to study computation in general. Computer science began to be established as a distinct academic discipline in the 1950s and early 1960s.[tpl]cite web |url=http://www.cl.cam.ac.uk/conference/EDSAC99/statistics.html |title=Some EDSAC statistics |publisher=Cl.cam.ac.uk |date= |accessdate=2011-11-19[/tpl] The world's first computer science degree program, the Cambridge Diploma in Computer Science, began at the University of Cambridge Computer Laboratory in 1953. The first computer science degree program in the United States was formed at Purdue University in 1962.Computer science pioneer Samuel D. Conte dies at 85 July 1, 2002 Since practical computers became available, many applications of computing have become distinct areas of study in their own right.
Although many initially believed it was impossible that computers themselves could actually be a scientific field of study, in the late fifties it gradually became accepted among the greater academic population.[tpl]cite book |authorlink=Steven Levy |last=Levy |first=Steven |title=Hackers: Heroes of the Computer Revolution |year=1984 |isbn=0-385-19195-2 |publisher=Doubleday [/tpl] It is the now well-known IBM brand that formed part of the computer science revolution during this time. IBM (short for International Business Machines) released the IBM 704 and later the IBM 709 computers, which were widely used during the exploration period of such devices. "Still, working with the IBM computer was frustrating...if you had misplaced as much as one letter in one instruction, the program would crash, and you would have to start the whole process over again". During the late 1950s, the computer science discipline was very much in its developmental stages, and such issues were commonplace.
Time has seen significant improvements in the usability and effectiveness of computer science technology. Modern society has seen a significant shift from computers being used solely by experts or professionals to a more widespread user base. Initially, computers were quite costly, and for their most-effective use, some degree of human aid was needed, in part by professional computer operators. However, as computers became widespread and far more affordable, less human assistance was needed, although residues of the original assistance still remained.

===Major achievements===

Despite its short history as a formal academic discipline, computer science has made a number of fundamental contributions to science and society. These include:
* The start of the "digital revolution," which includes the current Information Age and the Internet.http://www.cis.cornell.edu/Dean/Presentations/Slides/bgu.pdf
* A formal definition of computation and computability, and proof that there are computationally unsolvable and intractable problems.[tpl]Cite journal |author=Constable, R.L. |date=March 2000 |url=http://www.cs.cornell.edu/cis-dean/bgu.pdf | title=Computer Science: Achievements and Challenges circa 2000 |format=PDF[/tpl]
* The concept of a programming language, a tool for the precise expression of methodological information at various levels of abstraction.[tpl]cite book |last=Abelson |first=H. |authorlink=Hal Abelson |coauthors=G.J. Sussman with J. Sussman |year=1996 |title=Structure and Interpretation of Computer Programs |edition=2nd |publisher=MIT Press |isbn=0-262-01153-0 |quote=The computer revolution is a revolution in the way we think and in the way we express what we think. The essence of this change is the emergence of what might best be called procedural epistemology — the study of the structure of knowledge from an imperative point of view, as opposed to the more declarative point of view taken by classical mathematical subjects.[/tpl]
* In cryptography, breaking the Enigma code was an important factor contributing to the Allied victory in World War II.David Kahn, The Codebreakers, 1967, ISBN 0-684-83130-9.
* Scientific computing enabled practical evaluation of processes and situations of great complexity, as well as experimentation entirely by software. It also enabled advanced study of the mind, and mapping of the human genome became possible with the Human Genome Project. Distributed computing projects such as Folding@home explore protein folding.
* Algorithmic trading has increased the efficiency and liquidity of financial markets by using artificial intelligence, machine learning, and other statistical and numerical techniques on a large scale.Black box traders are on the march The Telegraph, August 26, 2006 High frequency algorithmic trading can also exacerbate volatility.[tpl]cite web |url=http://papers.ssrn.com/sol3/papers.cfm?abstract_id=1686004 |title=The Impact of High Frequency Trading on an Electronic Market |doi=10.2139/ssrn.1686004 |publisher=Papers.ssrn.com |date= |accessdate=2012-05-14[/tpl]
* Image synthesis, including video by computing individual video frames.[tpl]Citation needed|date=October 2010[/tpl]
* Simulation of various processes, including computational fluid dynamics, physical, electrical, and electronic systems and circuits, as well as societies and social situations (notably war games) along with their habitats, among many others. Modern computers enable optimization of such designs as complete aircraft. Notable in electrical and electronic circuit design are SPICE, as well as software for physical realization of new (or modified) designs. The latter includes essential design software for integrated circuits.[tpl]Citation needed|date=October 2010[/tpl]

==Philosophy==

A number of computer scientists have argued for the distinction of three separate paradigms in computer science. Peter Wegner argued that those paradigms are science, technology, and mathematics.[tpl]cite conference |author=Wegner, P. |title=Research paradigms in computer science |booktitle=Proceedings of the 2nd international Conference on Software Engineering |location=San Francisco, California, United States |date=October 13–15, 1976 |publisher=IEEE Computer Society Press, Los Alamitos, CA[/tpl] Peter Denning's working group argued that they are theory, abstraction (modeling), and design.[tpl]Cite doi |10.1145/63238.63239[/tpl] Amnon H. Eden described them as the "rationalist paradigm" (which treats computer science as branch of mathematics, which is prevalent in theoretical computer science, and mainly employs deductive reasoning), the "technocratic paradigm" (which might be found in engineering approaches, most prominently in software engineering), and the "scientific paradigm" (which approaches computer-related artifacts from the empirical perspective of natural sciences, identifiable in some branches of artificial intelligence).[tpl]cite doi |10.1007/s11023-007-9060-8[/tpl]

===Name of the field===

The term "computer science" was first coined by the numerical analyst George Forsythe in 1961.Donald Knuth (1972). "George Forsythe and the Development of Computer Science". Comms. ACM. Despite its name, a significant amount of computer science does not involve the study of computers themselves. Because of this, several alternative names have been proposed. Certain departments of major universities prefer the term computing science, to emphasize precisely that difference. Danish scientist Peter Naur suggested the term datalogy, to reflect the fact that the scientific discipline revolves around data and data treatment, while not necessarily involving computers. The first scientific institution to use the term was the Department of Datalogy at the University of Copenhagen, founded in 1969, with Peter Naur being the first professor in datalogy. The term is used mainly in the Scandinavian countries. Also, in the early days of computing, a number of terms for the practitioners of the field of computing were suggested in the Communications of the ACM – turingineer, turologist, flow-charts-man, applied meta-mathematician, and applied epistemologist.Communications of the ACM 1(4):p.6 Three months later in the same journal, comptologist was suggested, followed next year by hypologist.Communications of the ACM 2(1):p.4 The term computics has also been suggested.IEEE Computer 28(12):p.136 In Europe, terms derived from contracted translations of the espression "automatic information" (e.g. "informazione automatica" in Italian) are often used, e.g. informatique (French), Informatik (German), informatica (Italy), informática (Spain, Portugal) or informatika (Slavic languages) are also used and have also been adopted in the UK (as in the School of Informatics of the University of Edinburgh).P. Mounier-Kuhn, L’Informatique en France, de la seconde guerre mondiale au Plan Calcul. L’émergence d’une science'', Paris, PUPS, 2010, ch. 3 & 4.
Renowned computer scientist Edsger Dijkstra once stated: "Computer science is no more about computers than astronomy is about telescopes."Research Methods for Science By Michael P. Marder page 14. Published by Cambridge University Press The design and deployment of computers and computer systems is generally considered the province of disciplines other than computer science. For example, the study of computer hardware is usually considered part of computer engineering, while the study of commercial computer systems and their deployment is often called information technology or information systems. However, there has been much cross-fertilization of ideas between the various computer-related disciplines. Computer science research also often intersects other disciplines, such as philosophy, cognitive science, linguistics, mathematics, physics, statistics, and logic.
Computer science is considered by some to have a much closer relationship with mathematics than many scientific disciplines, with some observers saying that computing is a mathematical science. Early computer science was strongly influenced by the work of mathematicians such as Kurt Gödel and Alan Turing, and there continues to be a useful interchange of ideas between the two fields in areas such as mathematical logic, category theory, domain theory, and algebra.
The relationship between computer science and software engineering is a contentious issue, which is further muddied by disputes over what the term "software engineering" means, and how computer science is defined.M. Tedre (2011) Computing as a Science: A Survey of Competing Viewpoints, Minds and Machines 21(3), 361-387 David Parnas, taking a cue from the relationship between other engineering and science disciplines, has claimed that the principal focus of computer science is studying the properties of computation in general, while the principal focus of software engineering is the design of specific computations to achieve practical goals, making the two separate but complementary disciplines.[tpl]Cite doi|10.1023/A:1018949113292[/tpl], p. 19: "Rather than treat software engineering as a subfield of computer science, I treat it as an element of the set, Civil Engineering, Mechanical Engineering, Chemical Engineering, Electrical Engineering, ..."
The academic, political, and funding aspects of computer science tend to depend on whether a department formed with a mathematical emphasis or with an engineering emphasis. Computer science departments with a mathematics emphasis and with a numerical orientation consider alignment with computational science. Both types of departments tend to make efforts to bridge the field educationally if not across all research.

==Areas of computer science==

As a discipline, computer science spans a range of topics from theoretical studies of algorithms and the limits of computation to the practical issues of implementing computing systems in hardware and software.[tpl]cite web|author=Computing Sciences Accreditation Board|title=Computer Science as a Profession|url=http://www.csab.org/comp_sci_profession.html |date=28 May 1997| accessdate=2010-05-23 |archiveurl = http://web.archive.org/web/20080617030847/http://www.csab.org/comp_sci_profession.html |archivedate = 2008-06-17[/tpl][tpl]cite book |author=Committee on the Fundamentals of Computer Science: Challenges and Opportunities, National Research Council |title=Computer Science: Reflections on the Field, Reflections from the Field|url=http://www.nap.edu/catalog.php?record_id=11106#toc|publisher=National Academies Press|isbn=978-0-309-09301-9|year=2004[/tpl]
CSAB, formerly called Computing Sciences Accreditation Board – which is made up of representatives of the Association for Computing Machinery (ACM), and the IEEE Computer Society (IEEE-CS)[tpl]cite web |url=http://www.csab.org/ |title=Csab, Inc |publisher=Csab.org |date=2011-08-03 |accessdate=2011-11-19[/tpl] – identifies four areas that it considers crucial to the discipline of computer science: theory of computation, algorithms and data structures, programming methodology and languages, and computer elements and architecture. In addition to these four areas, CSAB also identifies fields such as software engineering, artificial intelligence, computer networking and communication, database systems, parallel computation, distributed computation, computer-human interaction, computer graphics, operating systems, and numerical and symbolic computation as being important areas of computer science.

===Theoretical computer science===

The broader field of theoretical computer science encompasses both the classical theory of computation and a wide range of other topics that focus on the more abstract, logical, and mathematical aspects of computing.

====Theory of computation====

According to Peter J. Denning, the fundamental question underlying computer science is, "What can be (efficiently) automated?"[tpl]cite journal | last=Denning | first=P.J. | authorlink=Peter J. Denning | year=2000 | title=Computer Science: The Discipline | url=http://www.idi.ntnu.no/emner/dif8916/denning.pdf | journal=Encyclopedia of Computer Science|format=PDF |archiveurl = http://web.archive.org/web/20060525195404/http://www.idi.ntnu.no/emner/dif8916/denning.pdf |archivedate = 2006-05-25[/tpl] The study of the theory of computation is focused on answering fundamental questions about what can be computed and what amount of resources are required to perform those computations. In an effort to answer the first question, computability theory examines which computational problems are solvable on various theoretical models of computation. The second question is addressed by computational complexity theory, which studies the time and space costs associated with different approaches to solving a multitude of computational problems.
The famous "P=NP?" problem, one of the Millennium Prize Problems,Clay Mathematics Institute P=NP is an open problem in the theory of computation.

====Information and coding theory====

Information theory is related to the quantification of information.This was developed by Claude E. Shannon to find
fundamental limits on signal processing operations such as compressing data and on reliably storing and communicating data.
Coding theory is the study of the properties of codes (systems for converting information from one form to another) and their fitness for a specific application. Codes are used for data compression, cryptography, error detection and correction, and more recently also for network coding. Codes are studied for the purpose of designing efficient and reliable data transmission methods.

====Algorithms and data structures====

====Programming language theory====

Programming language theory (PLT) is a branch of computer science that deals with the design, implementation, analysis, characterization, and classification of programming languages and their individual features. It falls within the discipline of computer science, both depending on and affecting mathematics, software engineering and linguistics. It is an active research area, with numerous dedicated academic journals.

====Formal methods====

Formal methods are a particular kind of mathematically based technique for the specification, development and verification of software and hardware systems. The use of formal methods for software and hardware design is motivated by the expectation that, as in other engineering disciplines, performing appropriate mathematical analysis can contribute to the reliability and robustness of a design. However, the high cost of using formal methods means that they are usually only used in the development of high-integrity and life-critical systems, where safety or security is of utmost importance. Formal methods are best described as the application of a fairly broad variety of theoretical computer science fundamentals, in particular logic calculi, formal languages, automata theory, and program semantics, but also type systems and algebraic data types to problems in software and hardware specification and verification.

====Concurrent, parallel and distributed systems====

Concurrency is a property of systems in which several computations are executing simultaneously, and potentially interacting with each other. A number of mathematical models have been developed for general concurrent computation including Petri nets, process calculi and the Parallel Random Access Machine model. A distributed system extends the idea of concurrency onto multiple computers connected through a network. Computers within the same distributed system have their own private memory, and information is often exchanged amongst themselves to achieve a common goal.

====Databases and information retrieval====

A database is intended to organize, store, and retrieve large amounts of data easily. Digital databases are managed using database management systems to store, create, maintain, and search data, through database models and query languages.

===Applied computer science===

====Artificial intelligence====

This branch of computer science aims to synthesise goal-orientated processes such as problem-solving, decision-making, environmental adaptation, learning and communication which are found in humans and animals. From its origins in cybernetics and in the Dartmouth Conference (1956), artificial intelligence (AI) research has been necessarily cross-disciplinary, drawing on areas of expertise such as applied mathematics, symbolic logic, semiotics, electrical engineering, philosophy of mind, neurophysiology, and social intelligence. AI is associated in the popular mind with robotic development, but the main field of practical application has been as an embedded component in areas of software development which require computational understanding and modeling such as finance and economics, data mining and the physical sciences. The starting-point in the late 1940s was Alan Turing's question "Can computers think?", and the question remains effectively unanswered although the "Turing Test" is still used to assess computer output on the scale of human intelligence. But the automation of evaluative and predictive tasks has been increasingly successful as a substitute for human monitoring and intervention in domains of computer application involving complex real-world data.

====Computer architecture and engineering====

Computer architecture, or digital computer organization, is the conceptual design and fundamental operational structure of a computer system. It focuses largely on the way by which the central processing unit performs internally and accesses addresses in memory. The field often involves disciplines of computer engineering and electrical engineering, selecting and interconnection hardware components to create computers that meet functional, performance, and cost goals.

====Computer graphics and visualization====

Computer graphics is the study of digital visual contents, and involves syntheses and manipulations of image data. The study is connected to many other fields in computer science, including computer vision, image processing, and computational geometry, and are heavily applied in the fields of special effects and video games.

====Computer security and cryptography====

Computer security is a branch of computer technology, whose objective includes protection of information from unauthorized access, disruption, or modification while maintaining the accessibility and usability of the system for its intended users. Cryptography is the practice and study of hiding (encryption) and therefore deciphering (decryption) information. Modern cryptography is largely related to computer science, for many encryption and decryption algorithms are based on their computational complexity.

====Computational science====

Computational science (or scientific computing) is the field of study concerned with constructing mathematical models and quantitative analysis techniques and using computers to analyze and solve scientific problems. In practical use, it is typically the application of computer simulation and other forms of computation to problems in various scientific disciplines.

====Health Informatics====

Health Informatics in computer science is referred to as Computational health informatics and deals with computational techniques for solving problems in health care. It is a sub-branch of both computer science and health informatics.

====Information science====

====Software engineering====

Software engineering is the study of designing, implementing, and modifying software in order to ensure it is of high quality, affordable, maintainable, and fast to build. It is a systematic approach to software design, involving the application of engineering practices to software.
Software engineering deals with the organizing and analyzing software to get the best out of them. It doesn't just deal with the creation or manufacture of new software, but its internal maintenance and arrangement.

==Academia==

===Conferences===

===Journals===

==Education==

Some universities teach computer science as a theoretical study of computation and algorithmic reasoning. These programs often feature the theory of computation, analysis of algorithms, formal methods, concurrency theory, databases, computer graphics, and systems analysis, among others. They typically also teach computer programming, but treat it as a vessel for the support of other fields of computer science rather than a central focus of high-level study.
Other colleges and universities, as well as secondary schools and vocational programs that teach computer science, emphasize the practice of advanced programming rather than the theory of algorithms and computation in their computer science curricula. Such curricula tend to focus on those skills that are important to workers entering the software industry. The process aspects of computer programming are often referred to as software engineering.
While computer science professions increasingly drive the U.S. economy, computer science education is absent in most American K-12 curricula. A report entitled "Running on Empty: The Failure to Teach K-12 Computer Science in the Digital Age" was released in October 2010 by Association for Computing Machinery (ACM) and Computer Science Teachers Association (CSTA), and revealed that only 14 states have adopted significant education standards for high school computer science. The report also found that only nine states count high school computer science courses as a core academic subject in their graduation requirements. In tandem with "Running on Empty", a new non-partisan advocacy coalition - Computing in the Core (CinC) - was founded to influence federal and state policy, such as the Computer Science Education Act, which calls for grants to states to develop plans for improving computer science education and supporting computer science teachers.
Within the United States a gender gap in computer science education has been observed as well. Research conducted by the WGBH Educational Foundation and the  Association for Computing Machinery (ACM) revealed that more than twice as many high school boys considered computer science to be a “very good” or “good” college major than high school girls.http://www.acm.org/membership/NIC.pdf In addition, the high school Advanced Placement (AP) exam for computer science has displayed a disparity in gender. Compared to other AP subjects it has the lowest number of female participants, with a composition of about 15 percent women.[tpl]cite web|last=Gilbert|first=Alorie|title=Newsmaker: Computer science's gender gap|url=http://news.cnet.com/2008-1082-833090.html|publisher=CNET News[/tpl] This gender gap in computer science is further witnessed at the college level, where 31 percent of undergraduate computer science degrees are earned by women and only 8 percent of computer science faculty consists of women.[tpl]cite web|last=Dovzan|first=Nicole|title=Examining the Gender Gap in Technology|url=http://sitemaker.umich.edu/356.dovzan/evidence_and_explanations_of_the_gender_gap|publisher=University of Michigan[/tpl]

==See also==

* Academic genealogy of computer scientists
* ACM computer science body of knowledge (2008)
* Informatics (academic field)
* List of academic computer science departments
* List of computer science conferences
* List of computer scientists
* List of publications in computer science
* List of pioneers in computer science
* List of software engineering topics
* List of unsolved problems in computer science
* Women in computing

==References==

==Further reading==

; Overview
* [tpl]cite book|first=Allen B.|last=Tucker|authorlink=Allen B. Tucker|title=Computer Science Handbook|edition=2nd|publisher=Chapman and Hall/CRC|year=2004|isbn=1-58488-360-X[/tpl]
** "Within more than 70 chapters, every one new or significantly revised, one can find any kind of information and references about computer science one can imagine. ... all in all, there is absolute nothing about Computer Science that can not be found in the 2.5 kilogram-encyclopaedia with its 110 survey articles ...." (Christoph Meinel, Zentralblatt MATH)
* [tpl]cite book|first=Jan|last=van Leeuwen|authorlink=Jan van Leeuwen|title=Handbook of Theoretical Computer Science|publisher=The MIT Press|year=1994|isbn=0-262-72020-5[/tpl]
** "... this set is the most unique and possibly the most useful to the computer science community, in support both of teaching and research .... The books can be used by anyone wanting simply to gain an understanding of one of these areas, or by someone desiring to be in research in a topic, or by instructors wishing to find timely information on a subject they are teaching outside their major areas of expertise." (Rocky Ross, SIGACT News)
* [tpl]cite book|title=Encyclopedia of Computer Science|edition=4th|first1=Anthony|last1=Ralston|authorlink=Anthony Ralston|first2=Edwin D.|last2=Reilly|authorlink2=Edwin D. Reilly|first3=David|last3=Hemmendinger|authorlink3=David Hemmendinger|publisher=Grove's Dictionaries|year=2000|isbn=1-56159-248-X|url=http://portal.acm.org/ralston.cfm[/tpl]
** "Since 1976, this has been the definitive reference work on computer, computing, and computer science. ... Alphabetically arranged and classified into broad subject areas, the entries cover hardware, computer systems, information and data, software, the mathematics of computing, theory of computation, methodologies, applications, and computing milieu. The editors have done a commendable job of blending historical perspective and practical reference information. The encyclopedia remains essential for most public and academic library reference collections." (Joe Accardin, Northeastern Illinois Univ., Chicago)
* [tpl]cite book|url=http://books.google.com/books?id=JTYPKxug49IC&printsec=frontcover#v=onepage&q&f=false|title=Milestones in Computer Science and Information Technology|author=Edwin D. Reilly| publisher=Greenwood Publishing Group|year=2003|isbn=978-1-57356-521-9[/tpl]
;Selected papers
* [tpl]cite book|first=Donald E.|last=Knuth|authorlink=Donald Knuth|title=Selected Papers on Computer Science|publisher=CSLI Publications, Cambridge University Press|year=1996[/tpl]
** "Covering a period from 1966 to 1993, its interest lies not only in the content of each of these papers — still timely today — but also in their being put together so that ideas expressed at different times complement each other nicely." (N. Bernard, Zentralblatt MATH)
;Articles
* Peter J. Denning. Is computer science science?, Communications of the ACM, April 2005.
* Peter J. Denning, Great principles in computing curricula, Technical Symposium on Computer Science Education, 2004.
* Research evaluation for computer science, Informatics Europe report. Shorter journal version: Bertrand Meyer, Christine Choppy, Jan van Leeuwen and Jorgen Staunstrup, Research evaluation for computer science, in Communications of the ACM, vol. 52, no. 4, pp. 31–34, April 2009.
; Curriculum and classification
* Association for Computing Machinery. 1998 ACM Computing Classification System. 1998.
* Joint Task Force of Association for Computing Machinery (ACM), Association for Information Systems (AIS) and IEEE Computer Society (IEEE-CS). Computing Curricula 2005: The Overview Report. September 30, 2005.
* Norman Gibbs, Allen Tucker. "A model curriculum for a liberal arts degree in computer science". Communications of the ACM, Volume 29 Issue 3, March 1986.

==External links==

* [tpl]dmoz|Computers/Computer_Science/[/tpl]
* Scholarly Societies in Computer Science
* Best Papers Awards in Computer Science since 1996
* Photographs of computer scientists by Bertrand Meyer
* EECS.berkeley.edu
; Bibliography and academic search engines
* CiteSeerx (article): search engine, digital library and repository for scientific and academic papers with a focus on computer and information science.
* DBLP Computer Science Bibliography (article): computer science bibliography website hosted at Universität Trier, in Germany.
* The Collection of Computer Science Bibliographies (article)
; Professional organizations
* Association for Computing Machinery
* IEEE Computer Society
* Informatics Europe
; Misc
* Computer Science - Stack Exchange a community run Question and Answer site for Computer Science

