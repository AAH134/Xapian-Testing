
DRMAA or Distributed Resource Management Application API is a high-level Open Grid Forum API specification for the submission and control of jobs to a Distributed Resource Management (DRM) system, such as a Cluster or Grid computing infrastructure. The scope of the API covers all the high level functionality required for applications to submit, control, and monitor jobs on execution resources in the DRM system.
In 2007, DRMAA was one of the first two (the other one was GridRPC) specifications that reached the full recommendation status in the Open Grid Forum.

== Development Model ==

The development of this API was done through the Global Grid Forum, in the model of IETF standard development, and it was originally co-authored by: 
*Roger Brobst from Cadence Design Systems
*Waiman Chan from IBM
*Fritz Ferstl from Sun Microsystems, now Univa
*Jeff Gardiner from John P. Robarts Research Institute
*Andreas Haas from Sun Microsystems (Co-Chair)
*Bill Nitzberg from Altair Engineering
*Hrabri Rajic from Intel (Maintainer & Co-Chair)
*John Tollefsrud from Sun Microsystems Founding (Chair)
This specification was first proposed at Global Grid Forum 3 (GGF3)GGF3 - The Third Global Grid Forum October 7 - 11, 2001 in Frascati, Italy, but gained most of its momentum at Global Grid Forum 4 in Toronto, Ontario. The development of the specification was first proposed with the objective to facilitate direct interfacing of applications to existing DRM systems by application's builders, portal builders, and Independent Software Vendors (ISVs). Because the API was co-authored by participants from a wide-selection of companies and included participants from industries and education, its development resulted in an open standard that received a relatively good reception from a wide audience quickly.

== Significance ==

Without DRMAA, no standard model existed to submit jobs to component regions of a Grid, assuming each region was running local DRMSs.  The first version of DRMAA API has been implemented in Sun's Grid Engine and also in the University of Wisconsinâ€“Madison's program Condor.  Furthermore C, Java, and IDL binding documents have been made available.

=== Implementations ===

* Grid Engine
* Univa Grid Engine
* Condor
* Torque/PBS
* GridWay
* Xgrid
* EGEE (LCG2 / gLite)
* Platform LSF
* UNICORE
* Kerrighed Cluster Framework
* IBM Tivoli Workload Scheduler LoadLeveler
* SLURM

=== Language Bindings ===

* C/C++
* Java/JavaScript
* Perl
* Python
* Rubydrmaa4ruby at github.com
Other language bindings can be generated easily from SWIG, which was first used by the Perl binding.

== DRMAA applications ==

A number of software solutions use DRMAA to interface with different resource management systems:
* tigr-workflow
* eXludus RepliCator
* GridwiseTech Grid Engine-Globus Toolkit adapter

== References ==

*Distributed Resource Management Application API Specification 1
*GGF3 Event List
*GGF4 Event List

== External links ==

*DRMAA's Project Page
*Global Grid Forum
*Sun Grid Engine
*Condor Homepage
*DRAMM binding for Platform LSF
*Condor Extensions Project
*DRMAA binding for Ruby
*DRMAA HOWTOs and Tutorials

