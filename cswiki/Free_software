
Free software, software libre or libre software is software that can be used, studied, and modified without restriction, and which can be copied and redistributed in modified or unmodified form either without restriction, or with restrictions that only ensure that further recipients have the same rights under which it was obtained and that manufacturers of consumer products incorporating free software provide the software as source code. The word free in the term free software refers to freedom (liberty) and is not at all related to monetary cost. The Free Software Foundation advises people to "avoid using terms like 'give away' or 'for free,' because those terms imply that the issue is about price, not freedom."[tpl]cite web|last=Free Software Foundation|title=What is free software?|url=http://www.gnu.org/philosophy/free-sw.html|accessdate=14 December 2011[/tpl] Free software is generally available without charge but is not bound to such a restriction.
Fees are usually charged for distribution on compact discs and bootable USB drives, or for services of installing or maintaining the operation of free software. Development of large, commercially-used free software is often funded by a combination of user donations, corporate contributions, and tax money. The SELinux project at the United States National Security Agency is an example of a federally-funded free software project.
In practice, for software to be distributed as free software, the source code, a human-readable form of the program from which an executable form is produced,  must be accessible to the recipient along with a document granting the same rights to free software under which it was published.  Such a document is either a free software license or the release of the source code into the public domain.
The free software movement was conceived in 1983 by Richard Stallman to satisfy the need for and to give the benefit of software freedom to computer users.[tpl]cite web | url = http://www.gnu.org/gnu/initial-announcement.html | title = GNU project Initial Announcement [/tpl] Stallman founded the Free Software Foundation in 1985 to provide the organizational structure to advance his free software ideas.
From 1998 onward, alternative terms for free software came into use. The most common are software libre, free and open source software (FOSS) and free, libre and open source software (FLOSS). The Software Freedom Law Center was founded in 2005 to protect and advance FLOSS.[tpl]cite web | url = http://www.softwarefreedom.org | title = Software Freedom Law Center[/tpl] Commercial software may sometimes offer freedoms which are typical of free and open source software. Contrary to a popular misconception that software is either free or commercial, they are unrelated traits, since free software can be commercial and proprietary software can be non-commercial. One example of free commercial software is GNAT, an Ada compiler from the company AdaCore.[tpl]cite web|title=Service Directory — Free Software Foundation — working together for free software|url=http://www.fsf.org/resources/service|publisher=Free Software Foundation|accessdate=2010-07-06|quote=Founded in 1994, AdaCore is the leading provider of commercial software solutions for Ada, a state-of-the-art programming language designed for large, long-lived applications where safety, security, and reliability are critical. ... We believe GNU Project will best benefit from an open, non- proprietary technology, thus we have made all our AdaCore's products free software by adopting the licensing policy of the Free Software Foundation. This means that all components of the GNAT technology, including the run-time, come with sources.[/tpl] It has been developed and is available commercially (i.e., against payment), but is free software because of its non-proprietary nature, with the source code publicly available. On the other hand, free software and proprietary software are opposite traits, and an application can be one or the other but never both, contingent upon the availability of the source code under certain minimum freedoms.
Free software, which may or may not be distributed free of charge, is distinct from freeware, which by definition does not require payment for use.  The authors or copyright holders of freeware may retain all rights to the software; it is not necessarily permissible to  reverse engineer, modify, or redistribute freeware.
Since free software may be freely redistributed, it is generally available at little or no cost. Free software business models are usually based on adding value such as applications, support, training, customization, integration, or certification. At the same time, some business models which work with proprietary software are not compatible with free software, such as those that depend on the user to pay for a license in order to lawfully use the software product.

==History==

In the 1950s, 1960s, and until the early 1970s, it was normal for computer users to have the software freedoms associated with free software. Software was commonly shared by individuals who used computers and by hardware manufacturers who welcomed the fact that people were making software that made their hardware useful. Organizations of users and suppliers, for example, SHARE, were formed to facilitate exchange of software. By the early 1970s, the picture changed: software costs were dramatically increasing, a growing software industry was competing with the hardware manufacturer's bundled software products (free in that the cost was included in the hardware cost), leased machines required software support while providing no revenue for software, and some customers able to better meet their own needs did not want the costs of "free" software bundled with hardware product costs. In United States vs. IBM, filed January 17, 1969, the government charged that bundled software was anticompetitive.[tpl]cite book | last = Fisher| first = Franklin M.| coauthors = McKie, James W.; Mancke, Richard B. | title =IBM and the U.S. Data Processing Industry: An Economic History | publisher = Praeger | year =1983 | isbn =0-03-063059-2 [/tpl] While some software might always be free, there would be a growing amount of software that was for sale only. In the 1970s and early 1980s, the software industry began using technical measures (such as only distributing binary copies of computer programs) to prevent computer users from being able to study and modify software. In 1980 copyright law was extended to computer programs.
In 1983, Richard Stallman, longtime member of the hacker community at the MIT Artificial Intelligence Laboratory, announced the GNU project, saying that he had become frustrated with the effects of the change in culture of the computer industry and its users. Software development for the GNU operating system began in January 1984, and the Free Software Foundation (FSF) was founded in October 1985. He developed a free software definition and the concept of "copyleft", designed to ensure software freedom for all.
Some non-software industries are beginning to use techniques similar to those used in free software development for their research and development process; scientists, for example, are looking towards more open development processes, and hardware such as microchips are beginning to be developed with specifications released under copyleft licenses (see the OpenCores project, for instance). Creative Commons and the free culture movement have also been largely influenced by the free software movement.

===Naming===

The FSF recommends using the term "free software" rather than "open source software" because, as they state in a paper on Free Software philosophy, the latter term and the associated marketing campaign focuses on the technical issues of software development, avoiding the issue of user freedoms. The FSF also notes that "Open Source" has exactly one specific meaning in common English, namely that "you can look at the source code." Stallman states that while the term "Free Software" can lead to two different interpretations, one of them is consistent with FSF definition of Free Software so there is at least some chance that it could be understood properly, unlike the term "Open Source".[tpl]cite web | url = http://www.gnu.org/philosophy/open-source-misses-the-point.html | title = Why "Open Source" misses the point of Free Software | quote = The philosophy of open source, with its purely practical values, impedes understanding of the deeper ideas of free software; it brings many people into our community, but does not teach them to defend it. [/tpl] "Libre" is often used to avoid the ambiguity of the word "free" in English language; see Gratis versus libre. 

==Definition==

The first formal definition of free software was published by FSF in February 1986.  That definition, written by Richard Stallman, is still maintained today and states that software is free software if people who receive a copy of the software have the following four freedoms.[tpl]cite web|url=http://www.gnu.org/philosophy/free-sw.html |title=FSF: The four freedoms |publisher=Gnu.org |date= |accessdate=2010-08-22[/tpl] (The numbering begins with zero since many computer systems use zero-based numbering.)
* Freedom 0: The freedom to run the program for any purpose.
* Freedom 1: The freedom to study how the program works, and change it to make it do what you wish.
* Freedom 2: The freedom to redistribute copies so you can help your neighbor.
* Freedom 3: The freedom to improve the program, and release your improvements (and modified versions in general) to the public, so that the whole community benefits.
Freedoms 1 and 3 require source code to be available because studying and modifying software without its source code is highly impractical.
Thus, free software means that computer users have the freedom to cooperate with whom they choose, and to control the software they use.  To summarize this into a remark distinguishing libre (freedom) software from gratis (zero price) software, the Free Software Foundation says: "Free software is a matter of liberty, not price. To understand the concept, you should think of 'free' as in 'free speech', not as in 'free beer[tpl]'"[/tpl].[tpl]cite web|url=http://www.gnu.org/philosophy/free-sw.html |title=The Free Software Definition |author=Free Software Foundation |accessdate=2007-04-22[/tpl] See Gratis versus libre.
In the late 1990s, other groups published their own definitions which describe an almost identical set of software.  The most notable are Debian Free Software Guidelines published in 1997, and the Open Source Definition, published in 1998.
The BSD-based operating systems, such as FreeBSD, OpenBSD, and NetBSD, do not have their own formal definitions of free software.  Users of these systems generally find the same set of software to be acceptable, but sometimes see copyleft as restrictive.  They generally advocate permissive free software licenses, which allow others to use the software as they wish, without being legally forced to provide the source code.  Their view is that this permissive approach is more free.  The Kerberos, X11, and Apache software licenses are substantially similar in intent and implementation.  

==Examples of free software==

The Free Software Directory maintains a large database of free software packages.  Some of the best-known examples include the Linux Kernel, the BSD and GNU/Linux operating systems, the GNU Compiler Collection and C library; the MySQL relational database; the Apache web server; and the Sendmail mail transport agent.  Other influential examples include the emacs text editor; the GIMP raster drawing and image editor; the X Window System graphical-display system; the LibreOffice office suite; and the TeX and LaTeX typesetting systems.

==Free software licenses==

All free software licenses must grant users all the freedoms discussed above. However, unless the applications' licenses are compatible, combining programs by mixing source code or directly linking binaries is problematic, because of license technicalities. Programs indirectly connected together may avoid this problem.
The majority of free software falls under a small set of licenses. The most popular of these licenses are:
* the GNU General Public License
* the GNU Lesser General Public License
* the BSD License
* the Mozilla Public License
* the MIT License
* the Apache License
The Free Software Foundation and the Open Source Initiative both publish lists of licenses that they find to comply with their own definitions of free software and open-source software respectively.
* List of FSF approved software licenses
* List of OSI approved software licenses
The FSF list is not prescriptive: free licenses can exist which the FSF has not heard about, or considered important enough to write about. So it's possible for a license to be free and not in the FSF list. The OSI list only lists licenses that have been submitted, considered and approved. All Open Source licenses must meet the Open Source Definition in order to be officially recognized as open source software.  Free software on the other hand is a more informal classification that does not rely on official recognition.  Nevertheless, software licensed under licenses that do not meet the Free Software Definition cannot rightly be considered free software.
Apart from these two organizations, the Debian project is seen by some to provide useful advice on whether particular licenses comply with their Debian Free Software Guidelines.  Debian doesn't publish a list of approved licenses, so its judgments have to be tracked by checking what software they have allowed into their software archives. That is summarized at the Debian web site.[tpl]cite web |url=http://www.debian.org/legal/licenses/ |title=Debian -- License information |accessdate=2008-01-08[/tpl]
It is rare that a license announced as being in-compliance with the FSF guidelines does not also meet the Open Source Definition, although the reverse is not necessarily true (for example, the NASA Open Source Agreement is an OSI-approved license, but non-free according to FSF).

===Different types of licenses===

There are different categories of free software.
* Public domain software – the copyright has expired, the work was not copyrighted, or the author has released the software onto the public domain (in countries where this is possible). Since public-domain software lacks copyright protection, it may be freely incorporated into any work, whether proprietary or free.
* Permissive licenses, also called BSD-style because they are applied to much of the software distributed with the BSD operating systems. These licenses are also known as copyfree as they have no restrictions on distribution.Copyfree: Unfetter your ideas  The author retains copyright solely to disclaim warranty and require proper attribution of modified works, and permits redistribution and any modification, even closed source ones.
* Copyleft licenses, with the GNU General Public License being the most prominent. The author retains copyright and permits redistribution under the restriction that all such redistribution is licensed under the same license. Additions and modifications by others must also be licensed under the same "copyleft" license whenever they are distributed with part of the original licensed product. This is also known as a Viral license. Due to the restriction on distribution not everyone considers this type of license to be free.Noordering.wordpress.comOpendevice.blogspot.comCharvolant.orgBlog.sunsetbrew.com

==Security and reliability==

There is debate over the security of free software in comparison to proprietary software, with a major issue being security through obscurity. A popular quantitative test in computer security is to use relative counting of known unpatched security flaws. Generally, users of this method advise avoiding products which lack fixes for known security flaws, at least until a fix is available.
Free software advocates say that this method is biased by counting more vulnerabilities for the free software, since its source code is accessible and its community is more forthcoming about what problems exist,[tpl]cite web | url = http://news.cnet.com/8301-10784_3-6047727-7.html | title = Firefox more secure than MSIE after all | publisher = News.com [/tpl] (This is called "Security Through Disclosure"The Benefits of Open Source) and proprietary software can have undisclosed flaws discoverable by or known to malicious users. As users can analyse and trace the source code, many more people with no commercial constraints can inspect the code and find bugs and loopholes than a corporation would find practicable.  According to Richard Stallman, user access to the source code makes deploying free software with undesirable hidden spyware functionality far more difficult than for proprietary software.[tpl]cite web|url=http://fsfe.org/freesoftware/transcripts/rms-fs-2006-03-09.en.html|title=Transcript where Stallman explains about spyware[/tpl]  As examples, he named two aspects of Windows XP that reveal information to Microsoft, which were discovered in spite of the estimated 50 million or more lines of Windows code having not been available to individual users for personal auditing.
Some quantitative studies have been done on the subject.David A. Wheeler: Why Open Source Software / Free Software (OSS/FS, FLOSS, or FOSS)? Look at the Numbers! 2007Michelle Delio: Linux: Fewer Bugs Than Rivals Wired.com 2004

==Selling free software==

Selling Software under the BSD license is permissible and commercial use of the project is part of the intent of the license.Linfo.orgFreebsd.org
The Free Software Foundation encourages selling free software. As the Foundation has written, "Distributing free software is an opportunity to raise funds for development. Don't waste it!".Selling Free Software gnu.org For example the GNU GPL which is the Free Software Foundation's license states that "user may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee."GNU General Public License, section 4. gnu.org
It is a common misbelief however that consumers shouldn't or aren't allowed to redistribute software under the GPL for profit,[tpl]citation needed|date=April 2011[/tpl] and some opposing parties state such notions. For example Microsoft CEO Steve Ballmer stated in 2001 that "Open source is not available to commercial companies. The way the license is written, if you use any open-source software, you have to make the rest of your software open source."Ballmer calling open source a 'cancer', saying it's "not available to commercial companies" Chicago Sun-Times, 2001 When you distribute software under the GPL, you must provide the source code as well and must allow others to distribute it. Yet there are large companies, e.g. Red Hat and IBM, which succeed in doing it.

==Economical aspects and adoption==

Free software played a significant part in the development of the Internet, the World Wide Web and the infrastructure of dot-com companies.[tpl]cite web|url=http://news.netcraft.com/archives/category/web-server-survey/ |title=Web Server Usage Survey |author=Netcraft[/tpl][tpl]cite web|url=http://www.unc.edu/~mohrmana/apache.pdf |title=Apache Strategy in the New Economy |author=The Apache Software Foundation[/tpl] Free software allows users to cooperate in enhancing and refining the programs they use; free software is a pure public good rather than a private good. Companies that contribute to free software can increase commercial innovation amidst the void of patent cross licensing lawsuits.[tpl]Citation needed|date=April 2012[/tpl] (See mpeg2 patent holders.)
The economic viability of free software has been recognized by large corporations such as IBM, Red Hat, and Sun Microsystems.[tpl]cite web|url=http://www.ibm.com/news/1999/03/02.phtml |title=IBM launches biggest Linux lineup ever |date=1999-03-02 |publisher=IBM |archiveurl=http://web.archive.org/web/19991110114228/http://www.ibm.com/news/1999/03/02.phtml |archivedate=1999-11-10[/tpl][tpl]cite web|title=IBM invests in Brazil Linux Tech Center|url=http://lwn.net/Articles/185602/|date=2006-05-24|publisher=LWN.net|author=Farrah Hamid[/tpl][tpl]cite web|url=http://www.ibm.com/developerworks/linux/library/l-erick.html|archiveurl=http://web.archive.org/web/20091218093727/http://www.ibm.com/developerworks/linux/library/l-erick.html|archivedate=2009-12-18|title=Interview: The Eclipse code donation|date=2001-11-01|publisher=IBM[/tpl][tpl]cite web | title = Study on the: Economic impact of open source software on innovation and the competitiveness of the Information and Communication Technologies (ICT) sector in the EU | url = http://ec.europa.eu/enterprise/sectors/ict/files/2006-11-20-flossimpact_en.pdf | accessdate = 2007-01-25 | author = Rishab Aiyer Ghosh | date = November 20, 2006 | format = PDF | publisher = European Union | page = 51 [/tpl] Many companies whose core business is not in the IT sector choose free software for their Internet information and sales sites, due to the lower initial capital investment and ability to freely customize the application packages.
Under the free software business model[tpl]Elucidate|date=April 2012|What is the free software business model?[/tpl], free software vendors may charge a fee for distribution and offer pay support and software customization services. Proprietary software uses a different business model, where a customer of the proprietary software pays a fee for a license to use the software. This license may grant the customer the ability to configure some or no parts of the software themselves. Often some level of support is included in the purchase of proprietary software, but additional support services (especially for enterprise applications) are usually available for an additional fee. Some proprietary software vendors will also customize software for a fee.[tpl]cite web|author = Andy Dornan|title = The Five Open Source Business Models|url = http://www.informationweek.com/blog/main/archives/2008/01/the_five_open_s.html[/tpl][tpl]dead link|date=April 2012[/tpl]
Free software is generally available at no cost and can result in permanently lower TCO costs compared to proprietary software.Total cost of ownership of open source software: a report for the UK Cabinet Office supported by OpenForum Europe With free software, businesses can fit software to their specific needs by changing the software themselves or by hiring programmers to modify it for them.  Free software often has no warranty, and more importantly, generally does not assign legal liability to anyone. However, warranties are permitted between any two parties upon the condition of the software and its usage. Such an agreement is made separately from the free software license.
A report by Standish Group estimates that adoption of free software has caused a drop in revenue to the proprietary software industry by about $60 billion per year.[tpl]cite web|url=http://standishgroup.com/newsroom/open_source.php |title=Standish Newsroom - Open Source |publisher=Standishgroup.com |date=2008-04-16 |accessdate=2010-08-22[/tpl]

==Controversies==

===Binary blobs===

In 2006, OpenBSD started the first campaign against the use of binary blobs, in kernels. Blobs are usually freely distributable device drivers for hardware from vendors that do not reveal driver source code to users or developers. This restricts the users' freedom effectively to modify the software and distribute modified versions. Also, since the blobs are undocumented and may have bugs, they pose a security risk to any operating system whose kernel includes them. The proclaimed aim of the campaign against blobs is to collect hardware documentation that allows developers to write free software drivers for that hardware, ultimately enabling all free operating systems to become or remain blob-free.
The issue of binary blobs in the Linux kernel and other device drivers motivated some developers in Ireland to launch gNewSense, a GNU/Linux based distribution with all the binary blobs removed. The project received support from the Free Software Foundation and stimulated the creation, headed by the Free Software Foundation Latin America, of the Linux-libre kernel.GNU/Linux distributions we know of which consist entirely of free software, and whose main distribution sites distribute only free software. The project has since been classified dormant by Distrowatch.[tpl]cite web |url=http://distrowatch.com/table.php?distribution=gnewsense |title=DistroWatch.com: gNewSense |accessdate=2012-05-27[/tpl] As of 2012, Trisquel is the most popular FSF endorsed GNU/Linux distribution ranked by Distrowatch.  [tpl]Cite web|url = http://distrowatch.com/stats.php?section=popularity|title = Linux Distributions - Facts and Figures|accessdate = 27 May 2012|last = DistroWatch|date = 27 May 2012[/tpl]

===BitKeeper===

Larry McVoy invited high-profile free software projects to use his proprietary distributed version control system, BitKeeper, free of charge, in order to attract paying users. In 2002, Linux coordinator Linus Torvalds decided to use BitKeeper to develop the Linux kernel, a free software project, claiming no free software alternative met his needs. This controversial decision drew criticism from several sources, including the Free Software Foundation's founder Richard Stallman.[tpl]cite web | title = Richard Stallman thanking Larry McVoy for ending the gratis licenses for BitKeeper | url = http://software.newsforge.com/article.pl?sid=05/04/25/130207 | archiveurl = http://web.archive.org/web/20071215030832/http://software.newsforge.com/article.pl?sid=05/04/25/130207 | archivedate = 2007-12-15 | publisher = NewsForge [/tpl]
Following the apparent reverse engineering of BitKeeper's protocols, McVoy withdrew permission for gratis use by free software projects.  Linus Torvalds quickly developed a free software replacement called Git, while fellow Linux kernel contributor Matt Mackall developed another free software replacement called Mercurial.  The Linux kernel community eventually settled on Git for its own development process, while some other free software projects have chosen Mercurial.

===Patent deals===

In November 2006, the Microsoft and Novell software corporations announced a controversial partnership involving, among other things, patent protection for some customers of Novell under certain conditions.[tpl]cite web | title = Ars Technica article on the Microsoft-Novell patent deal | url = http://arstechnica.com/open-source/news/2007/01/linux-20070128.ars [/tpl] FSF included as a result of this deal conditions in the GPL to prevent deals like it in the future.GPLv3 FAQ, accessed May 11, 2011.

==Criticism==

Eric S. Raymond argues that the term free software is too ambiguous and intimidating for the business community. Raymond promotes the term open source software as a more friendly alternative for the business and corporate world.[tpl]cite web | title = Eric S. Raymond's initial call to start using the term open source software, instead of free software | url = http://www.catb.org/~esr/open-source.html | author = Eric S. Raymond [/tpl]

==See also==

* Free content
* Definition of Free Cultural Works
* Libre knowledge
* Open format
* Open standard
* Outline of free software

===Lists===

*Category:Free software lists and comparisons
* List of formerly proprietary software
* List of free software project directories
* List of free software for Web 2.0 Services

==References==

==Books and articles==

* Puckette, Miller. “Who Owns our Software?: A first-person case study.” eContact! 11.3 — Logiciels audio « open source » / Open Source for Audio Application[tpl]dead link|date=January 2012[/tpl] (September 2009). Montréal: CEC.
*Hancock, Terry. "The Jargon of Freedom: 60 Words and Phrases with Context" Free Software Magazine. 2010-20-24
* 

==External links==

* The Free Software Definition
* Software Freedom Law Center
* Free Software Definition at The Linux Information Project
* Donation Central: a directory listing the donation pages of various Free software projects.

