
Google Native Client (NaCl) is a sandboxing technology for running a subset of Intel x86 or ARM native code using software-based fault isolation.Efficient software-based fault isolation, Robert Wahbe, Steven Lucco, Thomas E. Anderson, Susan L. Graham, 1993 It is proposed for safely running native code from a web browser, allowing web-based applications to run at near-native speeds,
To demonstrate the readiness of the technology, on 9 December 2011, Google announced the availability of several new Chrome-only versions of games known for their rich and processor-intensive graphics, including Bastion. NaCl runs hardware-accelerated 3D graphics (via OpenGL ES 2.0), sandboxed local file storage, dynamic loading, full screen mode, and mouse capture. There are also plans to make NaCl available on handheld devices.

==Overview==

Native Client is an open-source project being developed by Google.
An ARM implementation was released in March 2010.
NaCl uses Software Fault Isolation for sandboxing on x86-64 and ARM. Native Client sets up x86 segments to restrict the memory range that the sandboxed code can access.  It uses a code verifier to prevent use of unsafe instructions such as those that perform system calls.  To prevent the code from jumping to an unsafe instruction hidden in the middle of a safe instruction, Native Client requires that all indirect jumps be jumps to the start of 32-byte-aligned blocks, and instructions are not allowed to straddle these blocks.  Because of these constraints, C code must be recompiled to run under Native Client, which provides customised versions of the GNU toolchain, specifically gcc and binutils.
Native Client is licensed under a BSD-style license.
Native Client uses Newlib as its C library, but a port of GNU libc is also available.
Since release 0.5, Native Client has a stable ABI.Official NaCl Release Notes This roughly means that code compiled and running in the NaCl implementation of Google Chrome 14, will work in all future versions of Google Chrome.

==Pepper==

NaCl denotes table salt; as a pun, the name of pepper was also used. Pepper API is a cross-platform, open-source API for creating Native Client modules.Native Client: Technical Overview Pepper Plugin API, or PPAPI

===PPAPI===

On 12 August 2009 a page on Google Code introduced a new project, Pepper with associated Pepper Plugin API (PPAPI), This extension is designed specifically to ease the implementation of out-of-process plugin execution. Further, the goals of the project are to provide a framework for making plugins fully cross-platform. Topics considered include:
* Uniform semantics for NPAPI across browsers.
* Execution in a separate process from the renderer/browser itself.
* Standardize rendering using the browser's compositing process.
* Defining standardized events, and 2D rasterization functions.
* Initial attempt at providing 3D graphics access.
* Plugin registry.
The continuously evolving Pepper API also supports Gamepads (version 19) and WebSockets (version 18).Native Client: News & Announcements
As of 13 May 2010, Google's open source browser, Chromium, was the only web browser to utilize the new browser plug-in model.

==Reception==

Some groups of browser developers support the Native Client technology, but others do not.
Supporters: Chad Austin (of IMVU) praised the way Native Client can bring high-performance applications to the web (with about 5% penalty compared to native code) in a secure way, while also accelerating the evolution of client-side applications by giving a choice of the programming language used (beside JavaScript). 
Detractors: Other IT professionals are more critical of this sandboxing technology as it has substantial or substantive interoperability issues. 
Mozilla's vice president of products, Jay Sullivan, said that Mozilla has no intention of running native code inside the browser, as "These native apps are just little black boxes in a webpage. ... We really believe in HTML, and this is where we want to focus."
Mozilla's Christopher Blizzard criticized NaCl, claiming that native code cannot evolve in the same way that the source code-driven Internet can. He also compared NaCl to Microsoft's ActiveX technology, plagued with DLL hell.
Håkon Wium Lie, Opera's CTO, believes that "NaCl seems to be 'yearning for the bad old days, before the web'", and that "Native Client is about building a new platform – or porting an old platform into the web ... it will bring in complexity and security issues, and it will take away focus from the web platform."

==References==

==External links==

* Native Client - Google Developers (Native Client Developer Site)
* Google Native Client Project Page
*  – Technical talk at Google I/O 2009
* NaClbox
* News4Geeks.net: Google Native Client: The web of the future – or the past? (a good overview)

===Examples===

* Native Client Gallery
* torapp.info, vector editor, especially powerful for security printing
* NACLBox, a port of DOSBox to Native Client
* SodaSynth, a synthesizer for Native Client

