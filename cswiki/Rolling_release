
In software development, a rolling release or rolling update development model refers to a continually developing software system; this is instead of a standard release development model which uses software versions that must be reinstalled over the previous version. Rolling software, instead, is continually updated, in contrast to standard release software which is upgraded between versions. Rolling release development models are one of many types of software release life cycles and, in terms of software development methodology in general, rolling release development models are less common than standard release development models in most mainstream software sectors, such as operating systems.
Although a rolling release software development model can be used in the development of any piece or collection of software, it is typically, though not exclusively, seen in use by a minority of Linux distributions. Software distributions, of which Linux distributions form a very large proportion, are commonly referred to as distros, with rolling release distributions commonly referred to as rolling distros. When used as an adjective, instead of a noun, rolling release is often shortened to rolling, when referring to distributions, software, or development models.
A rolling release is typically implemented using small and frequent updates. However, simply having updates does not automatically mean that a piece of software is using a rolling release cycle; to qualify as a rolling release, the philosophy of developers must be to work with one code branch, versus discrete versions. When the rolling release development model is employed as the development model of a software distribution, software updates are typically delivered to users by a package manager software application on the user's personal computer accessing, through the internet, a remote software repository (often via a download mirror) stored on an internet file server.
Although rolling distributions use a rolling release software development model, most of the software contained in the distribution's software stack is usually standard release (i.e. not rolling release) software. Also, not all software distributions based on, derived from, or related to rolling release distributions are necessarily rolling releases themselves. An example of this is ConnochaetOS (formerly DeLi Linux) which is a standard (i.e. non-rolling) release distribution based on the rolling release distribution Arch Linux.
The remainder of this article focuses on the rolling release model as applied to software distributions (versus software applications). From this point onwards, unless otherwise stated, the term rolling release will be taken to refer to rolling release software distributions specifically and not to rolling release software in general.

== Development models ==

For the purpose of this article, rolling releases have been divided into the categories partially rolling (see part-rolling), fully rolling (see full-rolling), truly rolling (see true-rolling) and its pseudo-opposite (see pseudo-rolling), optionally rolling (see opt-rolling), and cyclically rolling (see cyclic-rolling).
The terms partially rolling and partly rolling (along with synonyms semi-rolling and half-rolling), fully rolling, truly rolling and optionally rolling are all standard terms used by software developers and users.[tpl]cite web|author=The Chakra Project|title=half-rolling development model|url=http://chakra-project.org/wiki/index.php/Chakra#Half-Rolling_Release_Model|publisher=chakra-project-org[/tpl][tpl]cite web|author=The Chakra Project|title=The Chakra Project Wiki: FAQs|url=http://chakra-project.org/wiki/index.php/Frequently_Asked_Questions|publisher=chakra-project-org[/tpl][tpl]cite web|title=Fedora Release Life-cycle Proposals|url=https://fedoraproject.org/wiki/Release_Lifecycle_Proposals|publisher=fedoraproject.org[/tpl][tpl]cite web|title=Fedora Development Mailing List|url=https://lists.fedoraproject.org/pipermail/devel/2010-March/132434.html|publisher=fedoraproject.org[/tpl][tpl]cite web|author=Rev|title=Linux Certification – Preparation|url=http://www.walkingwithzen.com/2009_09_01_archive.html|publisher=walkingwithzen.com[/tpl][tpl]cite web|title=Why openSUSE|url=http://en.opensuse.org/openSUSE:Why_openSUSE|publisher=opensuse.org[/tpl]
However, the term cyclically rolling is not necessarily a standard term, though the term cyclic release is — see Types of non-rolling releases.
The term cyclically rolling (and cyclic-rolling) has been used in this article to differentiate rolling releases based on a cyclical (versus rolling) development branch of a non-rolling distribution, since these (along with pseudo-rolling releases) have relevant differences, from other types of rolling releases — see freeze (software engineering) and Types of rolling releases subsection below.
As a pseudo-opposite to truly rolling (or true-rolling), the term pseudo-rolling is used by some users to describe and distinguish distributions such as aptosid, Aurora OS, antiX and LMDE, among others, which are based on (usually a development branch of) a non-rolling distribution which is modified to provide the end-user with a user experience approximating that of a true rolling release.
For brevity, partially rolling, cyclically rolling, truly rolling, optionally rolling and fully rolling have been contracted to part-rolling, cyclic-rolling, true-rolling, opt-rolling and full-rolling, respectively, in some parts of this article. The contraction of these terms is not necessarily standard nomenclature, or a reflection of general use within the software community, and is used merely as a convenient shorthand for the purposes of this article.

===Types of rolling releases===

Part-rolling, semi-rolling, or half-rolling distributions have a subset of software packages that are not rolling. These packages usually form either a non-rolling 'core' (such as the kernel and other major packages) or conversely a non-rolling 'wrapper' (normally custom application software to aid ease of use).
Full-rolling distributions (opposed to part-rolling distributions) do not divide the distribution into a rolling and non-rolling part. They apply the rolling release software development model to the entirety of the software stack.
Pseudo-rolling distributions attempt to stabilize a development branch of a non-rolling distribution via software patches to obtain a distribution with features similar to those of a true rolling release.
True-rolling distributions (as opposed to pseudo-rolling distributions) are developed solely using a rolling release software development model.
Opt-rolling distributions either have a separate rolling and non-rolling release edition of the distribution, or can be optionally run as a rolling or a non-rolling release distribution. Generally, they are either rolling or non-rolling by default. Optionally rolling distributions are relatively rare, compared to other rolling release distribution models.
Cyclic-rolling distributions are based on a cyclical development branch of a non-rolling distribution; as a result the general age and stability of the packages does not remain consistent through the development cycle; especially across the end of a cycle, during a release of the non-rolling parent distribution.
In particular, before each release of the parent distribution, its primary development branch is frozen. During this freeze period, no major changes are made to the development branch, and it is at this point that it is at its most stable and bug-free. At the new release of the parent distribution, the old development branch becomes the new stable branch and a fresh development branch is formed, restarting the whole software development cycle. It is at this point that the fresh development branch is now at its most unstable and buggy.
This software development and release cycle can be disruptive for cyclical rolling release software distributions based on primary development branches, due to the freeze period and the subsequent sudden discontinuity in stability and software bugs, as most rolling release distributions try to maintain a steady and consistent user experience. This conflict arises due to the inherent difference between rolling release and non-rolling release software development models, hence making this a challenge for all cyclical rolling release software distributions to overcome.
All rolling distributions (whether part-, full-, pseudo-, true-, cyclic-, etc.) have software contained in the repositories that is more current than that contained on the installation media and usually contains very recent software releases – often the latest stable software releases available. They have pseudo-releases and installation media that are simply a snapshot of the software distribution at the time of the release. There is therefore no need to reinstall the operating system, as is (usually) the case with upgrading between versions of a standard release. Also, a rolling release operating system installed from an old install disc can be fully updated post-installation to the latest system software and application software via the Internet.
Rolling release software distributions in general often fall into one or more of the following software development model categories and subcategories:

==== Part-rolling distributions ====

* Partly rolling distribution with a more stable non-rolling fixed core. Examples are PCLinuxOS, Chakra Linux and Aurora OS.
* Partly rolling distribution with a non-rolling fixed wrapper around a rolling core. An example is Toorox Linux.
* Partly rolling distribution which mixes rolling and non-rolling development models. Examples are PCLinuxOS, Chakra Linux, Aurora OS and Toorox Linux, but also (to a much lesser extent) distributions like Fedora and Ubuntu which allow rolling upgrades between releases (instead of re-installing) and try to supply the latest stable application releases — however, Fedora and Ubuntu are not currently listed as rolling distributions in this article, since (although they are both capable of rolling software upgrades) they do not (as of March 2012) use a rolling release software development model.

==== Full-rolling distributions ====

* Fully rolling distribution based on a rolling (usually secondary) development branch (such as Debian unstable) of a non-rolling release 'parent' distribution. Examples are aptosid, siduction and Semplice Linux.
* Fully rolling distribution based on another fully rolling parent distribution. Examples are Sabayon Linux, Calculate Linux, Funtoo Linux (all based on Gentoo Linux), Arch Hurd, ArchBang, CTKArch, KahelOS, and Parabola GNU/Linux (all based on Arch Linux).
* Fully rolling independent distribution. Examples are Arch Linux, Gentoo Linux, rPath Linux, and Yoper Linux.

==== Pseudo-rolling distributions ====

* Pseudo-rolling distribution based on a cyclical or rolling development branch (such as Debian testing and Debian unstable) of a non-rolling release 'parent' distribution. Examples are aptosid, siduction, Semplice Linux, antiX, LMDE, Aurora OS, Vanillux and Epidemic Linux.

==== True-rolling distributions ====

* Truly rolling (versus pseudo-rolling) distribution that is an independent rolling distribution which is not based on a development branch of a 'parent' distribution. Examples are Arch Linux, Gentoo Linux, rPath Linux, Yoper Linux and Sorcerer Linux (along with its forks: Source Mage and Lunar).
* Truly rolling distribution that is based on an independent truly rolling 'parent' distribution. Examples are Arch Hurd, ArchBang, KahelOS, Parabola GNU/Linux etc. (based on Arch Linux), Sabayon Linux, Calculate Linux, Funtoo Linux, etc. (based on Gentoo Linux), and Foresight Linux (based on rPath Linux).

==== Opt-rolling distributions ====

* Non-rolling release distribution that can be run as a rolling release, usually via a rolling repository. Example are openSUSE and compatible derivatives using the openSUSE Tumbleweed rolling repository.
* Rolling distribution on which is based a non-rolling release edition of the same distribution.
* Rolling distribution which is designed to be optionally able to run as a non-rolling release distribution.

==== Cyclic-rolling distributions ====

* Cyclically rolling distribution based on a cyclical (usually primary) development branch (such as Debian testing) of a non-rolling release 'parent' distribution. Examples are antiX and LMDE.

== Development branches ==

Other Linux distributions may maintain a development branch in between releases. These development branches (dev-branches) are often labelled with the suffix -current, -unstable, -testing or -snapshot and may resemble a rolling release because software in such a branch is continually updated. However, unlike a rolling release, primary development branches are intended to be the next release, and will be frozen and tested before such a release.
Mandriva Cooker, openSUSE Factory, Fedora Rawhide and Debian Testing (on which LMDE and antiX are based) are examples of primary development branches, and Debian unstable (on which aptosid is based) is an example of a secondary development branch. By their very nature, these development branches tend to be unstable and buggy, with security fixes being slow, incomplete or non-existent; they also tend to lack support and documentation.
For these reasons, some software distributions recommended (in the software documentation or on the distribution's website) that development branches, developmental milestone releases, pre-alpha software, alpha software, beta software and release candidates should generally not be used as enterprise software in a production environment, in case of data loss, etc.[tpl]cite web|title=Debian: Releases|url=http://www.debian.org/releases|publisher=debian.org[/tpl][tpl]cite web|title=Debian: Releases: Sid|url=http://www.debian.org/releases/sid|publisher=debian.org[/tpl] A humorous example of such is the Linux distribution Chakra Linux in alpha stage having the installation message “WARNING: This is alpha software, it could eat your hamster!!“[tpl]cite web|title=Chakra GNU/Linux Review|url=http://www.linuxbsdos.com/2011/04/30/chakra-gnulinux-review|publisher=LinuxBSDos|accessdate=2011-09-30|date=2011-04-30[/tpl][tpl]cite web|author=Dan Lynch|title=Chakra GNU/Linux Review|url=http://danlynch.org/blog/2009/05/chakra|publisher=danlynch.org|accessdate=2011-09-30|date=2009-05-30[/tpl]
Unlike rolling releases, development branches are mainly intended to be used by software developers, software testers and early adopters rather than your average end-user — see Software release life cycle.

== Rolling distributions: examples ==

The following Linux, BSD and Hurd distributions are all examples of full-rolling releases, except for those that are specifically indicated as partial (which are part-rolling) or cyclical (which are cyclic-rolling). Distributions marked as optional can be run either as rolling or non-rolling releases. Software distributions derived from another distribution (called the parent distribution) are called child distributions.
Those marked as fork, although still related to (shared ancestry), are now only derived from (forked codebase) and no-longer based on (shared codebase) their parent distribution, making them independent distributions. Software forking in software development breaks binary-compatibility of software packages between related software distributions in an analogous manner to speciation in biological evolution preventing cross-breeding between species.  
See GNU/Linux Distribution Timeline at Wikimedia for a Linux distribution evolutionary tree; or GNU/Linux Distribution Timeline at Futurist.se for the original source.
Other than Arch Hurd (which uses the GNU Hurd kernel) and the Gentoo/*BSD distributions (which use the BSD kernels), the rest are all Linux distributions (which use the Linux kernel). The following list of rolling distributions is grouped into families of related distributions.

=== List of rolling release software distributions ===

* Arch-related: Arch Linux, ArchBang Linux, Chakra GNU/Linux (fork; partial: non-rolling core), Parabola GNU/Linux, CTKArch, Arch Hurd,[tpl]citation|author= |url=http://www.archhurd.org/about.php|title=Official Arch Hurd About Page |publisher=archhurd.org |date= |accessdate=2011-01-18[/tpl] KahelOS, Manjaro Linux, Bridge Linux, Nosonja Linux[tpl]cite web|url=https://plus.google.com/102479162698978916755| title= Nosonja Google+ page | publisher=plus.google.com | date=2012-03-04 | accessdate=2012-03-05 | author=gobonja[/tpl]
* Debian-related: aptosid[tpl]cite web|author= |url=http://manual.aptosid.com/en/sys-admin-release-en.htm|title=Official aptosid Manual |publisher=manual.aptosid.com |date= |accessdate=2011-01-18[/tpl] (Debian unstable base), siduction (Debian unstable base), Semplice Linux[tpl]cite web | url=http://all-things-linux.blogspot.com/2011/12/semplice-linux-exercise-in-simplicity.html | title=All Things Linux: Semplice Linux | publisher=all-things-linux.blogspot.com | date=23 December 2011 | accessdate=January 23, 2012 | author=Barnaby[/tpl] (Debian unstable base), LMDE[tpl]citation|author= |url=http://www.linuxmint.com/download_lmde.php|title=Official Linux Mint Debian Edition Download Page |publisher=linuxmint.com |date= |accessdate=2011-01-18[/tpl] (cyclical: Debian testing base), Aurora OS[tpl]cite web | url=http://blog.auroraos.org/general/what-the-future-holds | title=The Aurora Team Blog: What the future holds | publisher=blog.auroraos.org | date=June 18, 2011 | accessdate=January 23, 2012 | author=Guitaraholic[/tpl] (partial: non-rolling core; Debian unstable & Ubuntu base), antiX[tpl]citation|author= |url=http://antix.mepis.org/index.php?title=Main_Page#News|title=Official antiX Wiki |publisher=antix.mepis.org |date= |accessdate=2011-01-18[/tpl] (cyclical: Debian testing & MEPIS base), Vanillux (cyclical: Debian & Ubuntu base), Epidemic GNU/Linux
* Fedora-related: Fuduntu Linux[tpl]cite web|author=Andrew|title=Fuduntu becomes rolling release|url=http://www.webupd8.org/2011/09/fuduntu-becomes-rolling-release.html|publisher=webupd8.org|accessdate=2011-09-30|date=2011-09-16[/tpl][tpl]cite web|title=DistroWatch Weekly: Q&A - Fuduntu Interview|url=http://distrowatch.com/weekly.php?issue=20111010#qa|publisher=distrowatch.com|accessdate=16 October 2011[/tpl][tpl]cite web|title=The Linux Experience: Fuduntu Interview|url=http://cristalinux.blogspot.com/2010/12/fuduntu-147-review.html|author=Chema Martín|publisher=cristalinux.blogspot.com|accessdate=16 October 2011[/tpl] (fork)
* Gentoo-related: Gentoo Linux,[tpl]citation|author= |url=http://www.gentoo.org/proj/en/gdp/doc/handbook-release.xml|title=Official Gentoo Handbook |publisher=gentoo.org |date=2008-04-22 |accessdate=2011-01-18[/tpl] Gentoo/FreeBSD, Gentoo/NetBSD, Gentoo/OpenBSD, Gentoo/DragonflyBSD, Funtoo Linux, Calculate Linux,[tpl]citation|author=L'autre |url=http://www.calculate-linux.ru/main/en/about|title=About Calculate Linux |publisher=calculate-linux.org |date=|accessdate=2011-02-06[/tpl] Toorox Linux (partial: non-rolling wrapper), Sabayon Linux,[tpl]citation|author=Sabayon Wiki |url=https://wiki.sabayon.org/index.php?title=En:Sabayon_Linux|title=Sabayon Linux - Sabayon Wiki |publisher=wiki.sabayon.org |date=2012-01-13 |accessdate=2012-01-23[/tpl][tpl]citation|author=Sabayon Wiki |url=https://wiki.sabayon.org/index.php?title=FAQ|title=FAQ - Sabayon Wiki |publisher=wiki.sabayon.org |date=2012-01-07 |accessdate=2012-01-23[/tpl] Google Chrome OS (and its open source development base Chromium OS)[tpl]cite web|url=https://sites.google.com/a/chromium.org/dev/chromium-os/developer-guide|title=Chromium OS Developers Guide|publisher=google.com|accessdate=May 22, 2011[/tpl]
* LFS-related: NuTyX Linuxen (LFS, BLFS & CRUX base)
* Mandriva-related: Unity Linux,[tpl]citation|author= |url=http://docs.unity-linux.org/Unity_Versions#Rolling_Release|title=Official Unity Linux Documentation |publisher=docs.unity-linux.org |date= |accessdate=2011-01-18[/tpl] PCLinuxOS (fork; partial: non-rolling core)
* rPath-related: rPath Linux, Foresight Linux[tpl]cite news|author= |url=http://www.foresightlinux.org/about/|title=Official Foresight Linux About Page |publisher=foresightlinux.org |date= |accessdate=2011-01-18[/tpl]
* Sorcerer-related: Sorcerer Linux,[tpl]cite web|title=Sorcerer Admin Mailing-List|url=https://lists.berlios.de/pipermail/sorcerer-admins/2010/001503.html|publisher=berlios.de|accessdate=13 October 2011[/tpl] Source Mage GNU/Linux (fork), Lunar Linux (fork)
* SUSE-related: openSUSE Linux[tpl]citation|author=Linux Planet |url=http://www.linuxplanet.com/linuxplanet/news/7316/1|title=Newest openSUSE Linux Offers Rolling Releases |publisher=linuxplanet.com |date=2011-03-10 |accessdate=2011-05-23[/tpl] (optional: rolling when using Tumbleweed software repository)
* Other: independent: Yoper Linux

== Rolling distributions: further details ==

The information contained in this section is sourced either directly from the software distribution's website or from Wikipedia or DistroWatch, except where indicated otherwise by inline citations.

===Arch-related===

Arch Hurd, ArchBang, Bridge Linux,  Chakra Linux, CTKArch, KahelOS, Manjaro Linux, Nosonja Linux and Parabola GNU/Linux (among others) are all rolling release binary-based Linux distributions related to, derived from, or based on, the independent rolling release binary-based Linux distribution Arch Linux.
*Arch Linux is an independent community developed Linux distribution that adheres to the KISS principle and aims to use only 'vanilla software' packages (i.e. plain/non-customized), minimizing the number of software patches and giving a 'simpler' operating system. It uses the Pacman package manager and is a 'self-build' distribution.
*Arch Hurd is a lightweight Hurd distribution with a stylized Openbox desktop and the experimental GNU Hurd kernel. Therefore, although based on Arch Linux, it is not a Linux distribution as it does not use the Linux kernel.
*ArchBang is a lightweight Linux distribution with a minimalist Openbox desktop. Its name was inspired from CrunchBang Linux (or #!), a lightweight Debian-based Linux distribution which also uses a minimalist Openbox desktop.
*Chakra GNU/Linux is a part-rolling live CD Linux distribution, that emerged from a modular modified KDE Plasma Desktop desktop for Arch Linux called KDEmod. KDEmod has now been merged into 'The Chakra Project' as part of Chakra Linux and is no-longer available for Arch Linux. Like Arch Linux, Chakra Linux adheres to the KISS principle. It focuses exclusively on the KDE desktop, describing itself as "GTK free by default",[tpl]cite web|author=The Chakra Project |url=http://chakra-project.org/about.html|title=The Chakra Project - About Chakra |publisher=chakra-project.org |date= |accessdate=2011-08-24[/tpl] but has a 'bundles system'[tpl]cite web|author=The Chakra Project |url=http://chakra-project.org/bundles.html|title=The Chakra Project - Bundles |publisher=chakra-project.org |date= |accessdate=2011-08-24[/tpl] that allows some popular GTK-based applications to be run inside their own self-contained filesystem. Originally a fork of Arch Linux, Chakra GNU/Linux is now independent of it — thus making it still Arch-related (due to shared ancestry), but now Arch-derived (i.e. forked from Arch's codebase), rather than Arch-based (i.e. following Arch's codebase).[tpl]citation|author=DistroWatch|url=http://distrowatch.com/table.php?distribution=chakra|publisher=distrowatch.com|title=DistroWatch.com: Chakra GNU/Linux|accessdate=2011-09-01[/tpl]
*CTKArch is a lightweight Linux distribution with a stylized Openbox desktop and support for the new Linux Btrfs filesystem.
*KahelOS is a Filipino Linux distribution that uses the GNOME3 desktop. 
*Manjaro Linux is a user friendly distribution based on the Xfce desktop environment. It comes with a custom installer and additional scripts to install a pre-configured and out of the box working system which is fully compatible with Arch Linux.[tpl]cite web | author=Arch Linux Wiki | url=https://wiki.archlinux.org/index.php/Arch_Based_Distributions_%28Active%29#Manjaro_Linux | title=Arch Linux Wiki: Manjaro Linux | publisher=wiki.archlinux.org | date=30 January 2012 | accessdate=January 31, 2012[/tpl]
*Nosonja Linux is described as a beginner-friendly, desktop computer orientated, rolling-release Linux distribution based on Arch Linux. It uses Xfce as the default desktop environment. It uses custom repository from which all essential parts of system are configured so all user have to do is press udate icon when updates are available.[tpl]cite web | author=DistroWatch | url=http://distrowatch.com/weekly.php?issue=20120305#waiting | title=DistroWatch Weekly, Issue 446 | publisher=distrowatch.com | date=5 March 2012 | accessdate=2012-03-05[/tpl]
*Parabola GNU/Linux is a 'self-build' Libre Linux distribution endorsed by the Free Software Foundation (FSF) as being fully 100% free software. Whereas freeware is free as in free of charge, free software (or libre software; see Alternative terms for free software) is free as in freedom. This distinction in relation to software is often described as the free beer vs free speech distinction. Most of the software distributions listed in this article are open source software and freeware, but not fully 100% free software, as defined by the FSF. However, they are all based on software which is, such as the GNU operating system (see GNU project) with the Linux, GNU Hurd or BSD kernels and X Window System.
See list of Linux distributions#Pacman-based for a list of Linux distributions using Arch Linux's Pacman package manager.See Arch Based Distributions (Active) on the Arch Linux Wiki for a list of currently active Arch-based distributions.

===Debian-related===

Both aptosid, siduction and Semplice are rolling release Deb binary-based Linux distributions based on Debian unstable, Debian's unstable development branch (Sid). Linux Mint Debian Edition (LMDE) and antiX are cyclical rolling release Deb binary-based Linux distributions based on Debian testing. Debian testing is a cyclical development branch and before each release of Debian stable, Debian testing is frozen (and thus not rolling) affecting rolling distributions based on it — like LMDE and antiX.
Such distributions are therefore described on this page as cyclically rolling releases (or cyclic-rolling for short) to distinguish them from other forms of rolling releases, and are not classed as fully rolling releases (or full-rolling for short). For more information, see Development models section above. Also, the term Debian here refers specifically to Debian GNU/Linux (which uses the Linux kernel) and not Debian GNU/kFreeBSD (which uses the FreeBSD kernel) nor Debian GNU/Hurd (which uses the GNU Hurd kernel).
*antiX is a MEPIS Linux variant based on SimplyMEPIS but with IceWM and Fluxbox instead of KDE as the desktop and based on Debian testing instead of Debian stable. As SimplyMEPIS is based on Debian stable, SimplyMEPIS is not rolling.
*aptosid (previously known as sidux) is a rolling release Linux distribution based on Debian unstable, Debian's unstable development branch (Sid), and using KDE Plasma Desktop as the primary desktop with Xfce and Fluxbox 'spins' (or 'flavors') also available. Besides Debian's unstable repositories, aptosid uses its own package repositories and tools to help avoid potential breakage, otherwise more common when using Debian unstable.
*Aurora OS (formerly Eeebuntu) is a live Linux distribution based on Debian unstable. Aurora uses the GNOME desktop environment and is designed for use on netbooks and desktop computers.  Its predecessor Eeebuntu was designed originally for the Asus Eee PC line of netbooks and was based on Ubuntu.
*Epidemic GNU/Linux is a Brazilian Debian based Linux distribution with KDE as the main desktop.
*LMDE (which stands for Linux Mint Debian Edition) is a live distribution which is rolling and Debian-based, unlike Linux Mint's main editions which are non-rolling and Ubuntu-based. Linux Mint's Ubuntu-based edition has GNOME as the primary desktop and alternative spins for the KDE Plasma Desktop, Fluxbox and LXDE desktops. [tpl]As of|2012|03[/tpl], LMDE is only available with the GNOME or Xfce desktop; however, as with most distros, alternative desktops can be installed.
::It was announced[tpl]cite news|author=Clement Lefebvre|url=http://blog.linuxmint.com/?p=1791|title=Linux Mint Blog: Upcoming releases|publisher=blog.linuxmint.com|date=2011-07-11|accessdate=2011-08-24[/tpl] on 11th July 2011 that, like the Xfce spin, future KDE spins of Linux Mint (from version 11 onwards) might switch to being rolling and LMDE-based: “...a discussion is ongoing about the possibility of switching the KDE edition to LMDE. ...Depending on this discussion, we could see a Linux Mint KDE 11 RC release this month, or an LMDE-based rolling Linux Mint KDE RC some time in August.”. A further post[tpl]cite web | url=http://blog.linuxmint.com/?p=1799 | title=Linux Mint Blog: Monthly Stats – July 2011 | publisher=blog.linuxmint.com | date=August 6, 2011 | accessdate=January 23, 2012 | author=Clement Lefebvre[/tpl] on 6th August 2011 read “The decision was taken to migrate our KDE and Fluxbox editions to LMDE. Going forward our project will support 2 desktops with a frozen Ubuntu base (Gnome and LXDE) and 4 desktops on top of a rolling Debian base (Gnome, KDE, Xfce and Fluxbox).”. However, this decision was reversed and the Linux Mint 12 KDE release was non-rolling and Kubuntu-based, with no rolling LMDE-based KDE version released. [tpl]As of|2012|03[/tpl], the future base of the KDE edition of Linux Mint remains uncertain.[tpl]cite web | url=http://blog.linuxmint.com/?p=1908 | title=Linux Mint Blog: Monthly Stats – November 2011 | publisher=blog.linuxmint.com | date=December 6, 2011 | accessdate=January 23, 2012 | author=Clement Lefebvre[/tpl]
*Semplice Linux is a lightweight Linux distribution live CD based on Debian unstable that uses an Openbox window manager based desktop.
*siduction is a community developed  live distribution based on Debian unstable that was forked from aptosid in late 2011. It is desktop computer orientated and available with the KDE Plasma Desktop, LXDE and Xfce desktops.
*Vanillux is a live distribution based on Debian which uses the GNOME3 desktop environment with the GNOME Shell graphical user interface.
Note: [tpl]As of|2012|03[/tpl], discussions are ongoingdiscussions[tpl]cite news|author=Lucas Nussbaum|url=http://www.lucas-nussbaum.net/blog/?p=659|title=Debian rolling discussion on -devel@|publisher=lucas-nussbaum.net|date=2011-04-02|accessdate=2011-09-06[/tpl][tpl]cite news|author=Raphaël Hertzog|url=https://lwn.net/Articles/406301|title=A constantly usable testing distribution for Debian|publisher=lwn.net[/tpl][tpl]cite news|author=Adnan Hodzic|url=http://www.omgubuntu.co.uk/2011/03/debian-cut-a-new-rolling-release|title=DebianCUT, a new rolling release?|publisher=omgubuntu.co.uk|date=2011-03-17|accessdate=2011-09-07[/tpl][tpl]cite web|title=Debian may begin rolling release branch|url=http://ostatic.com/blog/debian-may-begin-rolling-release-branch|publisher=ostatic.com|accessdate=1 October 2011|author=Susan Linton|date=2011-04-03[/tpl] among Debian developers (on Debian developer mailing list) regarding a proposal of developing a rolling release edition of Debian called DebianCUT (DebianCUT unofficial website) — where "CUT" stands for constantly usable testing. This has been suggested to be either a new edition of Debian or to replace (or be a modified or re-branded version of) Debian testing. 
See list of Linux distributions#Debian-based for a list of Debian-based Linux distributions.

===Fedora-related===

*Fuduntu Linux is an independent rolling release RPM binary-based Linux distribution which uses the GNOME desktop environment and was originally forked from Fedora Linux.
See list of Linux distributions#Fedora-based for a list of Fedora-based Linux distributions.

===LFS-related===

LFS stands for Linux From Scratch and is a collection of documentation designed to instruct a computer user in how to build a Linux distribution from scratch. It is intended primarily as an educational tool for computer science students to learn how a Linux-based operating system functions.
*NuTyX Linux is a French Linux distribution that is based on Linux From Scratch (LFS), Beyond Linux From Scratch (BLFS) and CRUX Linux.

===Gentoo-related===

Gentoo Linux, the Gentoo/*BSDs, Funtoo Linux, Calculate Linux, Toorox Linux, and most other Gentoo-based distributions, are source-based (rather than binary-based) — with Sabayon Linux (which is binary-based) being an obvious exception. Apart from the Sorcerer-related distributions (which are also source-based) most of the other distributions referred to in this article are binary-based (rather than source-based) distributions, as are most Linux distributions and software distributions in general.
*Gentoo Linux is an independent 'self-build' source-based distribution that puts an emphasis on compiling software packages from source-code using the Portage Package Manager, rather than installing pre-compiled binary software packages. It supports a wide range of computer architectures and desktop environments.
*Gentoo/FreeBSD, Gentoo/NetBSD, Gentoo/OpenBSD and Gentoo/DragonflyBSD are part of the Gentoo/*BSD project, which is part of the Gentoo/Alt project to port Gentoo to other kernels, besides Linux.
*Funtoo Linux is 'self-build' and source-based but differs from Gentoo in its use of a bazaar-style software development model.
*Calculate Linux is a source-based distribution aimed at business and enterprise deployment. It has KDE Plasma Desktop as its primary desktop, but is also available with GNOME or Xfce.
*Sabayon Linux is a binary-based live distribution with a wide range of desktop environments available, including Cinnamon, Enlightenment, Fluxbox, GNOME, KDE, LXDE, Openbox, and Xfce. Sabayon adheres to the out of the box philosophy and is intended to "just work". It aims to provide a Gentoo-based distribution that is easy to use for less experienced and newbie Linux users.
*Toorox Linux is a source-based Linux distribution which (like Sabayon) aims to make Gentoo 'newbie-friendly'. However (unlike Sabayon) although the Gentoo base is rolling, the Toorox wrapper is not rolling, making Toorox Linux only part-rolling. Also, Sabayon is binary-based, whereas Toorox is source-based. Toorox Linux is available with the KDE Plasma Desktop or GNOME desktop environment.
*Google Chrome OS is based on the open source software project Chromium OS; it is a netbook oriented operating system built on the Linux kernel with Google's Chrome browser (which is based on the open source Chromium browser) as the desktop's graphical user interface. Netbooks using Chrome OS are referred to as Chromebooks, while netbooks using Chromium OS are referred to as Chromiumbooks. Google Chrome OS is the only rolling distribution referred to in this article that is not open source software, nor freely downloadable from the internet. However, its base, Chromium OS, is open source software and freely downloadable from the internet.
*Chromium OS is the open source software project and operating system on which Google's Chrome OS is based. The relationship between Chrome OS and Chromium OS is similar to that between Red Hat Enterprise Linux and Fedora, or between SUSE Linux Enterprise Desktop and openSUSE, or that formally existing between Solaris and openSolaris (now openIndiana). This is a common practice where a commercial company or corporation wants to use an open-source software development model and the resources of the open-source community to aid the software development and software testing of a software platform to base its commercial product on.
See list of Linux distributions#Gentoo-based for a list of Gentoo-based Linux distributions.

===Mandriva-related===

PCLinuxOS and Unity Linux are rolling release RPM binary-based live CD Linux distributions related to, derived from, or based on, the independent non-rolling binary-based Linux distribution Mandriva Linux. Mandriva Linux is developed by Mandriva and was originally forked from Red Hat Linux. Both Mandriva Linux and Red Hat Linux use the RPM binary package format originally developed by Red Hat.
*PCLinuxOS is a part-rolling Linux distribution available with a large selection of desktop environments that evolved into a distribution from originally being a software repository for Mandriva Linux users. It aims to be easy for new users, especially those used to Microsoft Windows. Originally forked from Mandriva Linux, PCLinuxOS is now independent of Mandriva Linux,[tpl]citation|author=DistroWatch|url=http://distrowatch.com/table.php?distribution=pclinuxos|publisher=distrowatch.com|title=DistroWatch.com: PCLinuxOS|accessdate=2011-09-01[/tpl] pulling many of its software packages from other distributions — thus making it still Mandriva-related (due to shared ancestry), but now Mandriva-derived (i.e. forked from Mandriva's codebase), rather than Mandriva-based (i.e. following Mandriva's codebase).
*Unity Linux uses Openbox as the default desktop and is intended as a core distribution for other Linux distributions, referred to by Unity Linux developers and users as branches (not to be confused with development branches), to base themselves on. These branches (often called distrolets by Linux users), based on Unity Linux, include the following Linux distributions: Unite17 (formally PCe17OS), HUMANity, SAMity (formally Sam Linux), TinyMe, Granular Linux, Synergy Linux and ChameleonOS. Like YOPER, Unity Linux is an RPM v5 distribution. RPM v5 is a fork of the RPM package format.
See list of Linux distributions#Mandriva Linux-based for a list of Mandriva-based Linux distributions.

===rPath-related===

* rPath Linux is an independent rolling release Linux distribution developed by U.S. based rPath inc., and uses their Conary package management system; it is available with the GNOME or KDE Plasma Desktop desktop environment.
* Foresight Linux is a rolling release Linux distribution that is based on rPath Linux and uses Conary as its package management system with PackageKit for its graphical package manager; it is available with the GNOME and KDE Plasma Desktop desktop environments.

===Sorcerer-related===

Source Mage and Lunar Linux are forks of the independent Linux distribution Sorcerer Linux. Like Sorcerer, they are 'self-build' source-based (opposed to binary-based) Linux distributions that put an emphasis on compiling software packages from source-code, using a software compiler, rather than installing pre-compiled binary software packages.
*Sorcerer Linux is an independent source-based Linux distribution that is desktop orientated, with AfterStep, Blackbox, Enlightenment, Fluxbox, GNOME, IceWM, KDE, WMaker, and Xfce environments available.
*Source Mage GNU/Linux is an independent source-based Linux distribution that was originally forked from Sorcerer. It is desktop orientated, with AfterStep, Blackbox, Fluxbox, GNOME, IceWM, KDE, Openbox, WMaker, and Xfce environments available.
*Lunar Linux is an independent source-based Linux distribution that was originally forked from Sorcerer in late January to early February of 2002. It is available with AfterStep, Blackbox, Fluxbox, GNOME, IceWM, KDE, WMaker, and Xfce environments.

===SUSE-related===

By default openSUSE, and most of its derivatives, are not rolling releases since openSUSE has stable fixed releases and developmental milestone releases, as well as a development branch and testing repository called 'Factory'. However, openSUSE, and compatible derivatives, become rolling releases when pointed at the openSUSE Tumbleweed rolling repository instead of the default repository.[tpl]cite news|author=openSUSE Project |url=http://en.opensuse.org/Portal:Tumbleweed|title=openSUSE Tumbleweed Portal |publisher=opensuse.org |date=2011-08-26 |accessdate=2011-09-01[/tpl]
*openSUSE Linux is an independent RPM binary-based live Linux distribution. It is open source and community developed, produced by the openSUSE Project which is sponsored by SUSE. SUSE was formally part of Novell, both of which were acquired by Attachmate. Novell and SUSE were split and are now subsidiaries of The Attachmate Group. openSUSE is used as an open source development platform for SUSE Linux Enterprise Desktop (SLED) in a similar way that Fedora is for Red Hat Enterprise Linux (RHEL). Various derivatives (or 're-spins') of openSUSE, are also available, such as SUSE On A Diet (SOAD), Petite Linux, KDE Four Linux and KDE Reloaded Linux.
See SUSE Linux distributions for a list of SUSE-based Linux distributions.

===Other: independent===

*Yoper Linux is an independent RPM v5 binary-based Linux distribution – available with the KDE (version 4 or 3), Xfce or LXDE desktops – which aims to be the "fastest out of the box distribution". It uses hardware recognition tools from Knoppix. YOPER and Unity Linux both use the RPM v5 fork of the RPM package format and are collaborating on a package maintenance software project called ubuild.

==Comparison of rolling and non-rolling releases==

===Types of non-rolling releases===

Most operating systems and software distributions use a non-rolling release (or standard release) model rather than a rolling release model.[tpl]citation|author=Chad Perrin|url=http://www.techrepublic.com/blog/security/point-release-vs-rolling-release-developer-user-and-security-considerations/4150|title=Point-release vs rolling-release: developer, user and security considerations|publisher=techrepublic.com|date=210-08-02|accessdate=2011-09-06[/tpl] They have significant changes between version numbers, requiring a complete operating system reinstall, or at least a major upgrade.
The most common form of non-rolling release (or standard release) software is fixed release software, where (unlike a continual rolling release) the release is discrete and occurs at a fixed point in time. A minor software release in-between software versions is called a point release. Some software projects adopt a date-based (also termed a timed or scheduled release)[tpl]cite web | url=http://blog.ibeentoubuntu.com/2009/04/big-picture-timed-release-failures.html | title=The Big Picture: Timed Release Failures | publisher=blog.ibeentoubuntu.com | accessdate=January 26, 2012 | author=Daniel Bo.[/tpl] release policy, where software is released on a specific predetermined date, versus others which use a state-based (or release when ready)[tpl]cite web | url=http://blog.linuxmint.com/?p=1851 | title=Linux Mint 12 Preview | publisher=blog.linuxmint.com | date=November 4, 2011 | accessdate=January 26, 2012 | author=Clement Lefebvre[/tpl] release policy, where software is released once deemed by the development team to be in a release-ready state.
An example of these differing release policies are Ubuntu (which uses a date-based release policy) and its derivative Linux Mint (which uses a state-based release policy). Software distributions that use a date-based release policy will often have a countdown clock on their website, in the month leading up to a release, counting down the days to the launch-date. However, some distributions may instead choose to opt for a release policy somewhere between date-based and state-based, in an attempt to gain some of the benefits of both approaches.
The term cyclic release is sometimes used to describe software where the software project uses a cyclic software development process. Likewise, the term periodic release is sometimes used to describe software that is released at regular time intervals. Like rolling release, the terms fixed release, point release, cyclic release and periodic release do not apply solely to operating systems and software distributions. They can apply to any piece or collection of software; for example application software might adopt either a rolling release or fixed release software development model.
Examples of popular non-rolling release operating systems and software distributions include Microsoft Windows, Mac OS, most BSDs and most Linux distributions.

===Advantages and disadvantages: software development===

In terms of the software development process, standard releases require significant development effort being spent on keeping old versions up to date due to propagating bug fixes back to the newest branch, versus focusing more on the newest development branch. Also, unlike rolling releases, standard releases require more than one code branch to be developed and maintained, which increases the software development and software maintenance workload of the software developers and software maintainers.
On the other hand, software features and technology planning are easier in standard releases due to a better understanding of upcoming features in the next version(s) rather than simply the whim of the developers at any given time. Software release cycles can also be synchronized with those of major upstream software projects, such as desktop environments. Hence, there are pros and cons to both standard release and rolling release software development methodologies.

===Advantages and disadvantages: end-user experience===

As far as the end-user experience, standard releases are often viewed as more stable and bug-free since software conflicts can be more easily addressed and the software stack more thoroughly tested and evaluated, during the software development cycle.[tpl]cite web | url=http://kmandla.wordpress.com/2007/03/09/the-pros-and-cons-of-a-rolling-release/ | title=The pros and cons of a rolling release | publisher=kmandla.wordpress.com | date=2007-03-09 | accessdate=January 26, 2012 | author=K.Mandla[/tpl] For this reason, they tend to be the preferred choice in enterprise environments such as computer workstations, IT consulting, system administration, and mission-critical tasks such as data management and servers.
However, rolling releases offer more current software which can also provide increased stability and fewer software bugs along with the additional benefits of new features, greater functionality, faster running speeds, and improved system and application security, among others. With the last of these, software security, the rolling release model can have advantages in timely security updates, fixing system or application security bugs and vulnerabilities, that standard releases may have to wait till the next release for. Though, in a rolling release distribution, where the user has chosen to run it as a highly dynamic system, the constant flux of software packages can introduce new unintended software vulnerabilities.

==Popularity and adoption statistics==

This section is focused on the popularity and adoption of rolling distributions. For a more general look at the popularity and adoption of Linux distributions, please see Linux adoption. For a specific look at adoption in the desktop computing sector, see Desktop Linux #Measuring adoption.
When discussing the popularity and adoption  of rolling distributions, it is worth emphasizing the distinction, not only between current verses cumulative measures, and absolute verses relative measures, but between software distribution, software acquisition, software installation, software population and software utilization numbers:
# Software distribution: the number of rolling distros (absolute) and the size of the disto share (relative).
# Software acquisition: the number of rolling distro copies (absolute) and the size of the code share (relative).
# Software installation: the number of rolling distro installs (absolute) and the size of the installed base (relative).
# Software population: the number of rolling distro users and the size of the userbase (relative).
# Software utilization: the number of rolling distros running (absolute) and the size of the usage share (relative).
Note: Although FOSS users can buy FOSS CDs and DVDs, most FOSS distros are available to download legally free of charge. Generalized use of economics terms when referring to free and open source software can thus be potentially misleading.

===Popularity===

The ability to install, customize and configure only once, yet still continue to run the very 'latest and greatest' application software on a cutting-edge or bleeding-edge operating system, gives rolling release distributions a highly devoted following in the free and open source software community, which, though still a small minority, seems to be growing.[tpl]cite web|title=DistroWatch: Page-Hit Statistics|url=http://distrowatch.com/stats.php?section=popularity|publisher=distrowatch.com|accessdate=2011-09-30[/tpl][tpl]cite web|title=2007 Ubuntu Poll: Should Ubuntu move to a rolling release cycle?|url=http://ubuntuforums.org/showthread.php?t=529858|publisher=ubuntuforums.org|accessdate=2011-09-30[/tpl][tpl]cite web|title=2009 Ubuntu Poll: Would you prefer Ubuntu have a version that was a rolling release model?|url=http://ubuntuforums.org/showthread.php?t=1076023&page=3|publisher=ubuntuforums.org|accessdate=2011-09-30[/tpl][tpl]cite web|title=2008 openSUSE Poll: What release style would you like best?|url=http://forums.opensuse.org/english/other-forums/community-fun/surveys-polls/402364-release-style-preferences-wth-poll.html|publisher=opensuse.org|accessdate=2011-10-01|date=2008-12-20[/tpl][tpl]cite web|title=Rolling Release|url=http://np237.livejournal.com/31868.html|publisher=livejournal.com|accessdate=2011-10-01|author=Joss (aka np237)|date=2011-05-03[/tpl]
Indeed, in the rolling release user community, a rolling development model is often viewed as a 'must-have' feature when choosing and moving between software distributions (commonly referred to as distro hopping). In some cases, ardent fans of rolling distributions may become converts, opting solely to use rolling distributions, in a similar manner to 'Linux converts' with Linux adoption.

===Adoption===

With major software distributions (such as Google Chrome OS, openSUSE Tumbleweed, LMDE, Fuduntu, Chakra Linux, and the proposed DebianCUT) opting to provide a rolling release offering of some form, the number and popularity of rolling distributions would appear – and has been asserted by some, particularly in the rolling community – to be on the rise. However, whether this is truly part of a bigger long-term software development and use trend (either toward favoring rolling releases over standard releases, or toward giving the user the option to use software in either manner) remains to be seen.
Also although the absolute number of rolling release installs may have increased, the relative number (i.e. the proportion of releases which are rolling releases) may not have. This is likely the case, when one takes into account the explosion in mobile computing that has emerged over the last decade, with the dominance of mobile devices running mobile operating systems like Android, iOS and Windows Phone,  since Android, iOS and Windows Phone are non-rolling operating systems. Whether the proportion of rolling release installs will increase may depend partly on the future of the Android (non-rolling) and Google Chrome OS (rolling) operating systems — specifically, if Google merges the two, whether the resulting operating system will be a rolling release or not.

===Statistics===

Unlike commercial and proprietary operating systems, which tend to be pre-installed, rolling distributions (which are mostly freeware and FOSS) tend not to be; Google Chrome OS and Chromium OS being notable exceptions. Nor do rolling releases tend to require product activation. Since most are freeware and FOSS, they are legally free to download, copy, modify and redistribute, making the internet their primary distribution channel. This makes it practically impossible to get reliable figures on the userbase and installed base of rolling distributions.
Given their range and number, this is a well recognized issue with Linux in particular. Though the Linux kernel may be detected (e.g. via  User-Agent strings) the specific Linux distro running on it might not. Some distros log connections to their repository; however this can prove an unreliable measure due to compounding factors. Direct access to repository mirrors can result in uncounted users, while users using dynamic IPs can be repeat-counted, and users connected via a proxy server may be either under-counted or over-counted depending on the behavior of the exit node's IP address.
Although there are no official figures on popularity, adoption, downloads or installed base of rolling release software distributions, the popular website DistroWatch keeps page-hit statistics for its various distribution pages, including distributions which are rolling releases and those which have rolling release versions. This gives a very rough indication of the overall popularity landscape and adoption trends of software distributions and is used by some as an unofficial measure of popularity and adoption of software distributions.
However, in the case of rolling releases, it is possible that such page-hit statistics may be misleading. Along with server orientated software distributions, users of rolling release distributions are less likely to reinstall their operating system on a regular basis, and thus are also less likely to frequent the distribution's DistroWatch page, a use of which is for downloading software installation ISOs of, and catching up with the latest news on, new releases. This could result in the popularity of rolling releases and server-orientated distributions being under-represented by some measures, like page-hit statistics of websites such as DistroWatch.
There are also no official figures for the total number of Linux systems,[tpl]cite web|title=Counter-Debunking the 1% myth|url=http://dasublogbyprashanth.blogspot.com/2010/09/counter-debunking-1-myth.html|publisher=dasublogbyprashanth.blogspot.com|accessdate=1 October 2011|author=Prashanth Venkataram|date=2010-09-10[/tpl][tpl]cite web|url = http://itmanagement.earthweb.com/osrc/article.php/12068_3687616_1|title = Can Linux Adoption Ever be Accurately Gauged?|accessdate = 2008-05-23|last = Schestowitz|first = Roy|authorlink = |year = 2007|month = July[/tpl] partly due to the difficulty of quantifying the number of PCs running Linux (see Desktop Linux #Measuring adoption), since many users download Linux distributions. Hence, the sales figures for Linux systems and commercial Linux distributions indicate a much lower number of Linux systems and level of Linux adoption than is the case; this is mainly due to Linux being free and open source software that can be downloaded free of charge.[tpl]cite web|author=Caitlyn Martin|title=Debunking the 1% myth|url=http://broadcast.oreilly.com/2010/09/debunking-the-1-myth.html|publisher=oreilly.com|accessdate=1 October 2011|date=2010-09-07[/tpl]
However, the website The Linux Counter Project (LiCo) (new website here) keeps a guesstimate of the number of Linux systems, but does not distinguish between rolling release and standard release distributions. The DistroWatch and Linux Counter figures, taken together, could in theory be used to arrive at a very rough guesstimate of the popularity and adoption of rolling distributions.
In September 2008 Microsoft CEO Steve Ballmer claimed 60% of servers run Linux.[ref]
[tpl]cite web|url = http://www.pcworld.com/businesscenter/article/151568/ballmer_still_searching_for_an_answer_to_google.html|title = Ballmer Still Searching for an Answer to Google|accessdate = 2009-06-04|last = Niccolai|first = James|authorlink = |year = 2008|month = September[/tpl][/ref] Linux is by far the most popular operating system among supercomputers, due to its superior performance, flexibility, speed  and lower costs. In November 2008 Linux held an 87.8 percent share of the world's top 500 supercomputers.Operating system Family share for 11/2009 | TOP500 Supercomputing Siteshttp://en.wikipedia.org/wiki/Image:Top500_OS.png[tpl]cite web|url = http://blogs.computerworld.com/linux_it_doesnt_get_any_faster|title = Linux: It doesn't get any faster|accessdate = 2009-06-24|last = Vaughn-Nichols|first = Steven J.|authorlink = |year = 2009|month = June[/tpl][tpl]cite web|url = http://practical-tech.com/infrastructure/linux-computer-smashes-petaflop-supercomputer-barrier/ |title = Linux Computer Smashes Petaflop Supercomputer Barrier|accessdate = 2009-10-15|last = Practical Technology|authorlink = |year = 2009|month = June[/tpl][tpl]cite web|url = http://www.isa.org/InTechTemplate.cfm?Section=InTech&template=/ContentManagement/ContentDisplay.cfm&ContentID=29241 |title = Linux elbows into super-computer turf |accessdate = 2009-10-15|last = Strothman |first = Jim |authorlink = |year = 2003|month = September[/tpl]
[tpl]As of|2010|06[/tpl] the operating systems used on the world's top 500 supercomputers were:
:{|class="wikitable"
! OS || Share
|-
| Linux || 91.0%
|-
| Unix || 4.4%
|-
| Hybrid Unix/Linux || 3.4%
|-
| Windows HPC || 1.0%
|-
| BSD || 0.2%
|}
These figures indicate Linux dominates the supercomputer sector with a market share of over 90% and climbing, and that Linux constitutes well over half of the server market. However, it is unclear what proportion of these run rolling release Linux distributions. Most BSD systems are non-rolling since the only significant rolling release BSDs are the Gentoo/*BSD variants, which have far less popularity than major BSD distributions such as FreeBSD, OpenBSD and NetBSD, or Mac OS which is partially BSD-based. Likewise, as GNU Hurd is still experimental, Hurd distributions (rolling and non-rolling) have minimal market share. BSD and Hurd popularity and adoption thus currently has negligible impact on the overall popularity and adoption of rolling distributions, since most rolling distributions are Linux distributions and Linux popularity and adoption currently dwarfs that of BSD (not including Mac OS) and Hurd in the PC, mobile, enterprise, server and HPC markets.

==Common myths, misconceptions==

There are many myths and misconceptions regarding Linux and software distributions in general;[tpl]cite web|title=ZDNet: Debunking Some Linux Myths|url=http://www.zdnet.co.uk/blogs/jamies-mostly-linux-stuff-10006480/debunking-some-linux-myths-10014283/|publisher=zdnet.co.uk|accessdate=9 October 2011|author=J.A. Watson|date=23 October 2009[/tpl] this section focuses on the most common of those that regard rolling distributions.
* Some rolling distributions take snapshots of the distribution at regular time intervals and use version numbers to label these. During a snapshot point, a rolling distribution may try to minimize the number of software bugs. The snapshots are normally then made available for download form the web to be used by users as install media. These are quite different from release versions used in non-rolling distributions as they are not releases per se (though they are sometimes referred to as such) but snapshots. As a result, this can confuse new users as to whether a distribution is a rolling release, due to the use of version numbers, which are often associated with non-rolling releases.
* The distinction between rolling release software distributions and development branches of standard release software distributions is often overlooked by users inexperienced with rolling distributions. This can lead to confused comments, such as: "distro-X is a rolling distribution if you use its development branch" — where distro-X is a standard release distribution. Even in rare cases where the development branch is a rolling (versus the more common cyclical) development branch, this does not make the distribution rolling. Unlike standard release distributions, rolling release distributions do not have development branches.
* Some non-rolling release (aka standard release) application software, operating systems and software distributions are capable of rolling upgrades (treating the upgrade as if it were a major software update), without the need for a full reinstall of the software to overwrite the old version with the new one. Such software is sometimes confused with rolling release software, where, in fact, it is usually standard release software with rolling upgrades. Distributions with this capability tend to warn against or discourage new users from using rolling upgrades (instead recommending a fresh install) as they can break the operating system, especially at the hands of inexperienced users.[tpl]cite web|title=Apt-get dist-upgrade can seriously damage your health|url=http://lwn.net/Articles/75230|publisher=lwn.net|accessdate=1 October 2011|author=Rob (aka "Robster")|date=2004-03-10[/tpl] There are many significant differences between rolling release and standard release software, with not needing to be reinstalled being only one of these. Hence, it is a necessary condition but not a sufficient condition of rolling release software.
* A common misconception about rolling release distributions is that users are forced to accept rolling software updates, even if they do not wish to. This is not the case. Because a rolling system can be cutting-edge or bleeding-edge, does not mean users are forced to run such a system. The choice of which rolling updates to accept is fully under user control, and users can choose to run a more 'conservative' system set-up if they so wish. Also, more than one version of a given software package is often available in the software repository, giving users the freedom to choose which to run.
* A warning often made regarding rolling distributions is that they are not for newbies (new users). Though this may generally be true for most newbies and most rolling distributions (particularly when it comes to the likes of Gentoo Linux, Funtoo, Source Mage, Lunar Linux and Arch Linux) it is a sweeping generalization to apply it to all rolling distributions and all newbies. For example, PCLinuxOS, Sabayon Linux, Linux Mint (LMDE) and Google Chrome OS are specifically intended to be 'newbie friendly'.[tpl]cite web|title=DistroWatch: Sabayon Linux|url=http://distrowatch.com/table.php?distribution=sabayon|publisher=distrowatch.com|accessdate=9 October 2011[/tpl][tpl]cite web|title=DistroWatch: PCLinuxOS|url=http://distrowatch.com/table.php?distribution=pclinuxos|publisher=distrowatch.com|accessdate=9 October 2011[/tpl][tpl]cite web|title=DistroWatch: Linux Mint|url=http://distrowatch.com/table.php?distribution=mint|publisher=distrowatch.com|accessdate=9 October 2011[/tpl] Not aimed at newbies per se, Fuduntu, Chakra Linux and Toorox do intend to be more user friendly than the distributions they are based on or derived from. Also, users new to Linux but with a keen interest in computer software (e.g. IT enthusiasts, programmers or computer science students) might mainly wish to understand how a Linux system is built, works and is put together, for which Arch Linux, Gentoo Linux or Linux From Scratch might be likely recommendations. Although it may be argued that non-rolling distributions make better starting distributions for average new users, it is worth noting that unlike most software distributions rolling distributions do not force the user to reinstall in order to run current software. For newbies that are inexperienced with re-installs and lack an experienced user to turn to, a 'newbie friendly' rolling distribution might be viewed by some as worth considering.
* Another common assertion is that, by their very nature, rolling distributions in general are inherently unstable. Rolling distributions are often highly customizable, especially 'self-build' ones, which can give the user more control over stability (and other attributes) than many standard release distributions. Also, although rolling distributions generally have the latest stable software packages available in their software repository, the freshness of the packages in the repositories can vary from distribution to distribution, and need not be bleeding-edge in all cases. Also, as mentioned previously, more than one version of a given software package is often available in the software repository, giving the user the freedom to choose which to run.
Regarding this last misconception, it is not a necessary condition for a rolling distribution to be bleeding-edge, and there are many bleeding-edge standard release distributions for which stability is just as big an issue. Hence – though it is sometimes claimed by critics of rolling releases – rolling release distributions in general need not be inherently unstable, compared to standard release distributions. Rather, any apparent instability is more likely to be to do with the developer- and user-base in general opting for a more cutting-edge and bleeding-edge approach to software development and use. Thus, it is more a reflection of the culture and attitude in the 'rolling' community, than it is a flaw or failure in the rolling release software development model. However, most rolling distributions tend to include cutting-edge and bleeding-edge software in their software repositories so the user has the choice whether or not to use such.

== Focus of effort ==

It is common to occasionally take snapshots of the rolling release, which can be refined and frozen and only maintained for software security. This is often impractical since it requires duplication of effort. Typically, defects and characteristics of a particular software release are not specifically addressed in a separate/isolated effort (e.g. as patches); instead, they are addressed in the main software development effort.

== See also ==

* Operating system
* Software distribution
* Software versioning
* Software release life cycle
* Release management
* Release engineering
* Software engineering
* Outline of software engineering
* Software development
* Software development methodology
* Software development process
* List of software development philosophies
* Perpetual beta
See Wikipedia:Books and Category:Wikipedia books for more Wikipedia-Books.

See Wikibooks.org and WIKIBOOKS for Wikibooks.

== References ==

== External links ==

* Rolling Release A website about rolling releases, focused almost exclusively on Arch Linux.
* DistroWatch A website with a database of, and news and information about, software distributions.
* Scheduled Releases vs Rolling Releases A YouTube video "about the two main types of Linux Releases".

